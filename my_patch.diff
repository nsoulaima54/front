diff --git a/index.html b/index.html
index a05c517..4e794c8 100644
--- a/index.html
+++ b/index.html
@@ -8,6 +8,6 @@
   </head>
   <body>
     <div id="root"></div>
-    <script type="module" src="/src/main.jsx"></script>
+    <script type="module" src="../src/main.jsx"></script>
   </body>
 </html>
diff --git a/package-lock.json b/package-lock.json
index 989f9d8..5c160a3 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -9,16 +9,23 @@
       "version": "0.0.0",
       "dependencies": {
         "@microsoft/signalr": "^9.0.6",
+        "@tailwindcss/vite": "^4.1.14",
+        "bootstrap": "^5.3.8",
+        "bootstrap-icons": "^1.13.1",
+        "chart.js": "^4.5.0",
         "lucide-react": "^0.544.0",
         "react": "^19.1.1",
+        "react-bootstrap": "^2.10.10",
         "react-dom": "^19.1.1",
-        "react-toastify": "^11.0.5"
+        "react-toastify": "^11.0.5",
+        "tailwindcss": "^4.1.14"
       },
       "devDependencies": {
         "@eslint/js": "^9.36.0",
         "@types/react": "^19.1.16",
         "@types/react-dom": "^19.1.9",
         "@vitejs/plugin-react": "^5.0.4",
+        "daisyui": "^5.1.27",
         "eslint": "^9.36.0",
         "eslint-plugin-react-hooks": "^5.2.0",
         "eslint-plugin-react-refresh": "^0.4.22",
@@ -260,6 +267,15 @@
         "@babel/core": "^7.0.0-0"
       }
     },
+    "node_modules/@babel/runtime": {
+      "version": "7.28.4",
+      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.28.4.tgz",
+      "integrity": "sha512-Q/N6JNWvIvPnLDvjlE1OUBLPQHH6l3CltCEsHIujp45zQUSSh8K+gHnaEX45yAT1nyngnINhvWtzN+Nb9D8RAQ==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
     "node_modules/@babel/template": {
       "version": "7.27.2",
       "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.27.2.tgz",
@@ -312,7 +328,6 @@
       "version": "1.5.0",
       "resolved": "https://registry.npmjs.org/@emnapi/core/-/core-1.5.0.tgz",
       "integrity": "sha512-sbP8GzB1WDzacS8fgNPpHlp6C9VZe+SJP3F90W9rLemaQj2PzIuTEl1qDOYQf58YIpyjViI24y9aPWCjEzY2cg==",
-      "dev": true,
       "license": "MIT",
       "optional": true,
       "dependencies": {
@@ -324,7 +339,6 @@
       "version": "1.5.0",
       "resolved": "https://registry.npmjs.org/@emnapi/runtime/-/runtime-1.5.0.tgz",
       "integrity": "sha512-97/BJ3iXHww3djw6hYIfErCZFee7qCtrneuLa20UXFCOTCfBM2cvQHjWJ2EG0s0MtdNwInarqCTz35i4wWXHsQ==",
-      "dev": true,
       "license": "MIT",
       "optional": true,
       "dependencies": {
@@ -335,7 +349,6 @@
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/@emnapi/wasi-threads/-/wasi-threads-1.1.0.tgz",
       "integrity": "sha512-WI0DdZ8xFSbgMjR1sFsKABJ/C5OnRrjT06JXbZKexJGrDuPTzZdDYfFlsgcCXCyf+suG5QU2e/y1Wo2V/OapLQ==",
-      "dev": true,
       "license": "MIT",
       "optional": true,
       "dependencies": {
@@ -551,11 +564,22 @@
         "url": "https://github.com/sponsors/nzakas"
       }
     },
+    "node_modules/@isaacs/fs-minipass": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/@isaacs/fs-minipass/-/fs-minipass-4.0.1.tgz",
+      "integrity": "sha512-wgm9Ehl2jpeqP3zw/7mo3kRHFp5MEDhqAdwy1fTGkHAwnkGOVsgpvQhL8B5n1qlb01jV3n/bI0ZfZp5lWA1k4w==",
+      "license": "ISC",
+      "dependencies": {
+        "minipass": "^7.0.4"
+      },
+      "engines": {
+        "node": ">=18.0.0"
+      }
+    },
     "node_modules/@jridgewell/gen-mapping": {
       "version": "0.3.13",
       "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.13.tgz",
       "integrity": "sha512-2kkt/7niJ6MgEPxF0bYdQ6etZaA+fQvDcLKckhy1yIQOzaoKjBBjSj63/aLVjYE3qhRt5dvM+uUyfCg6UKCBbA==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "@jridgewell/sourcemap-codec": "^1.5.0",
@@ -566,7 +590,6 @@
       "version": "2.3.5",
       "resolved": "https://registry.npmjs.org/@jridgewell/remapping/-/remapping-2.3.5.tgz",
       "integrity": "sha512-LI9u/+laYG4Ds1TDKSJW2YPrIlcVYOwi2fUC6xB43lueCjgxV4lffOCZCtYFiH6TNOX+tQKXx97T4IKHbhyHEQ==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "@jridgewell/gen-mapping": "^0.3.5",
@@ -577,7 +600,6 @@
       "version": "3.1.2",
       "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
       "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=6.0.0"
@@ -587,20 +609,24 @@
       "version": "1.5.5",
       "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.5.tgz",
       "integrity": "sha512-cYQ9310grqxueWbl+WuIUIaiUaDcj7WOq5fVhEljNVgRfOUhY9fy2zTvfoqWsnebh8Sl70VScFbICvJnLKB0Og==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/@jridgewell/trace-mapping": {
       "version": "0.3.31",
       "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.31.tgz",
       "integrity": "sha512-zzNR+SdQSDJzc8joaeP8QQoCQr8NuYx2dIIytl1QeBEZHJ9uW6hebsrYgbz8hJwUQao3TWCMtmfV8Nu1twOLAw==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "@jridgewell/resolve-uri": "^3.1.0",
         "@jridgewell/sourcemap-codec": "^1.4.14"
       }
     },
+    "node_modules/@kurkle/color": {
+      "version": "0.3.4",
+      "resolved": "https://registry.npmjs.org/@kurkle/color/-/color-0.3.4.tgz",
+      "integrity": "sha512-M5UknZPHRu3DEDWoipU6sE8PdkZ6Z/S+v4dD+Ke8IaNlpdSQah50lz1KtcFBa2vsdOnwbbnxJwVM4wty6udA5w==",
+      "license": "MIT"
+    },
     "node_modules/@microsoft/signalr": {
       "version": "9.0.6",
       "resolved": "https://registry.npmjs.org/@microsoft/signalr/-/signalr-9.0.6.tgz",
@@ -618,7 +644,6 @@
       "version": "1.0.6",
       "resolved": "https://registry.npmjs.org/@napi-rs/wasm-runtime/-/wasm-runtime-1.0.6.tgz",
       "integrity": "sha512-DXj75ewm11LIWUk198QSKUTxjyRjsBwk09MuMk5DGK+GDUtyPhhEHOGP/Xwwj3DjQXXkivoBirmOnKrLfc0+9g==",
-      "dev": true,
       "license": "MIT",
       "optional": true,
       "dependencies": {
@@ -631,7 +656,6 @@
       "version": "0.92.0",
       "resolved": "https://registry.npmjs.org/@oxc-project/runtime/-/runtime-0.92.0.tgz",
       "integrity": "sha512-Z7x2dZOmznihvdvCvLKMl+nswtOSVxS2H2ocar+U9xx6iMfTp0VGIrX6a4xB1v80IwOPC7dT1LXIJrY70Xu3Jw==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": "^20.19.0 || >=22.12.0"
@@ -641,12 +665,90 @@
       "version": "0.93.0",
       "resolved": "https://registry.npmjs.org/@oxc-project/types/-/types-0.93.0.tgz",
       "integrity": "sha512-yNtwmWZIBtJsMr5TEfoZFDxIWV6OdScOpza/f5YxbqUMJk+j6QX3Cf3jgZShGEFYWQJ5j9mJ6jM0tZHu2J9Yrg==",
-      "dev": true,
       "license": "MIT",
       "funding": {
         "url": "https://github.com/sponsors/Boshen"
       }
     },
+    "node_modules/@popperjs/core": {
+      "version": "2.11.8",
+      "resolved": "https://registry.npmjs.org/@popperjs/core/-/core-2.11.8.tgz",
+      "integrity": "sha512-P1st0aksCrn9sGZhp8GMYwBnQsbvAWsZAX44oXNNvLHGqAOcoVxmjZiohstwQ7SqKnbR47akdNi+uleWD8+g6A==",
+      "license": "MIT",
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/popperjs"
+      }
+    },
+    "node_modules/@react-aria/ssr": {
+      "version": "3.9.10",
+      "resolved": "https://registry.npmjs.org/@react-aria/ssr/-/ssr-3.9.10.tgz",
+      "integrity": "sha512-hvTm77Pf+pMBhuBm760Li0BVIO38jv1IBws1xFm1NoL26PU+fe+FMW5+VZWyANR6nYL65joaJKZqOdTQMkO9IQ==",
+      "license": "Apache-2.0",
+      "dependencies": {
+        "@swc/helpers": "^0.5.0"
+      },
+      "engines": {
+        "node": ">= 12"
+      },
+      "peerDependencies": {
+        "react": "^16.8.0 || ^17.0.0-rc.1 || ^18.0.0 || ^19.0.0-rc.1"
+      }
+    },
+    "node_modules/@restart/hooks": {
+      "version": "0.4.16",
+      "resolved": "https://registry.npmjs.org/@restart/hooks/-/hooks-0.4.16.tgz",
+      "integrity": "sha512-f7aCv7c+nU/3mF7NWLtVVr0Ra80RqsO89hO72r+Y/nvQr5+q0UFGkocElTH6MJApvReVh6JHUFYn2cw1WdHF3w==",
+      "license": "MIT",
+      "dependencies": {
+        "dequal": "^2.0.3"
+      },
+      "peerDependencies": {
+        "react": ">=16.8.0"
+      }
+    },
+    "node_modules/@restart/ui": {
+      "version": "1.9.4",
+      "resolved": "https://registry.npmjs.org/@restart/ui/-/ui-1.9.4.tgz",
+      "integrity": "sha512-N4C7haUc3vn4LTwVUPlkJN8Ach/+yIMvRuTVIhjilNHqegY60SGLrzud6errOMNJwSnmYFnt1J0H/k8FE3A4KA==",
+      "license": "MIT",
+      "dependencies": {
+        "@babel/runtime": "^7.26.0",
+        "@popperjs/core": "^2.11.8",
+        "@react-aria/ssr": "^3.5.0",
+        "@restart/hooks": "^0.5.0",
+        "@types/warning": "^3.0.3",
+        "dequal": "^2.0.3",
+        "dom-helpers": "^5.2.0",
+        "uncontrollable": "^8.0.4",
+        "warning": "^4.0.3"
+      },
+      "peerDependencies": {
+        "react": ">=16.14.0",
+        "react-dom": ">=16.14.0"
+      }
+    },
+    "node_modules/@restart/ui/node_modules/@restart/hooks": {
+      "version": "0.5.1",
+      "resolved": "https://registry.npmjs.org/@restart/hooks/-/hooks-0.5.1.tgz",
+      "integrity": "sha512-EMoH04NHS1pbn07iLTjIjgttuqb7qu4+/EyhAx27MHpoENcB2ZdSsLTNxmKD+WEPnZigo62Qc8zjGnNxoSE/5Q==",
+      "license": "MIT",
+      "dependencies": {
+        "dequal": "^2.0.3"
+      },
+      "peerDependencies": {
+        "react": ">=16.8.0"
+      }
+    },
+    "node_modules/@restart/ui/node_modules/uncontrollable": {
+      "version": "8.0.4",
+      "resolved": "https://registry.npmjs.org/uncontrollable/-/uncontrollable-8.0.4.tgz",
+      "integrity": "sha512-ulRWYWHvscPFc0QQXvyJjY6LIXU56f0h8pQFvhxiKk5V1fcI8gp9Ht9leVAhrVjzqMw0BgjspBINx9r6oyJUvQ==",
+      "license": "MIT",
+      "peerDependencies": {
+        "react": ">=16.14.0"
+      }
+    },
     "node_modules/@rolldown/binding-android-arm64": {
       "version": "1.0.0-beta.41",
       "resolved": "https://registry.npmjs.org/@rolldown/binding-android-arm64/-/binding-android-arm64-1.0.0-beta.41.tgz",
@@ -654,7 +756,6 @@
       "cpu": [
         "arm64"
       ],
-      "dev": true,
       "license": "MIT",
       "optional": true,
       "os": [
@@ -671,7 +772,6 @@
       "cpu": [
         "arm64"
       ],
-      "dev": true,
       "license": "MIT",
       "optional": true,
       "os": [
@@ -688,7 +788,6 @@
       "cpu": [
         "x64"
       ],
-      "dev": true,
       "license": "MIT",
       "optional": true,
       "os": [
@@ -705,7 +804,6 @@
       "cpu": [
         "x64"
       ],
-      "dev": true,
       "license": "MIT",
       "optional": true,
       "os": [
@@ -722,7 +820,6 @@
       "cpu": [
         "arm"
       ],
-      "dev": true,
       "license": "MIT",
       "optional": true,
       "os": [
@@ -739,7 +836,6 @@
       "cpu": [
         "arm64"
       ],
-      "dev": true,
       "license": "MIT",
       "optional": true,
       "os": [
@@ -756,7 +852,6 @@
       "cpu": [
         "arm64"
       ],
-      "dev": true,
       "license": "MIT",
       "optional": true,
       "os": [
@@ -773,7 +868,6 @@
       "cpu": [
         "x64"
       ],
-      "dev": true,
       "license": "MIT",
       "optional": true,
       "os": [
@@ -790,113 +884,605 @@
       "cpu": [
         "x64"
       ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": "^20.19.0 || >=22.12.0"
+      }
+    },
+    "node_modules/@rolldown/binding-openharmony-arm64": {
+      "version": "1.0.0-beta.41",
+      "resolved": "https://registry.npmjs.org/@rolldown/binding-openharmony-arm64/-/binding-openharmony-arm64-1.0.0-beta.41.tgz",
+      "integrity": "sha512-PHVxYhBpi8UViS3/hcvQQb9RFqCtvFmFU1PvUoTRiUdBtgHA6fONNHU4x796lgzNlVSD3DO/MZNk1s5/ozSMQg==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "openharmony"
+      ],
+      "engines": {
+        "node": "^20.19.0 || >=22.12.0"
+      }
+    },
+    "node_modules/@rolldown/binding-wasm32-wasi": {
+      "version": "1.0.0-beta.41",
+      "resolved": "https://registry.npmjs.org/@rolldown/binding-wasm32-wasi/-/binding-wasm32-wasi-1.0.0-beta.41.tgz",
+      "integrity": "sha512-OAfcO37ME6GGWmj9qTaDT7jY4rM0T2z0/8ujdQIJQ2x2nl+ztO32EIwURfmXOK0U1tzkyuaKYvE34Pug/ucXlQ==",
+      "cpu": [
+        "wasm32"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "dependencies": {
+        "@napi-rs/wasm-runtime": "^1.0.5"
+      },
+      "engines": {
+        "node": ">=14.0.0"
+      }
+    },
+    "node_modules/@rolldown/binding-win32-arm64-msvc": {
+      "version": "1.0.0-beta.41",
+      "resolved": "https://registry.npmjs.org/@rolldown/binding-win32-arm64-msvc/-/binding-win32-arm64-msvc-1.0.0-beta.41.tgz",
+      "integrity": "sha512-NIYGuCcuXaq5BC4Q3upbiMBvmZsTsEPG9k/8QKQdmrch+ocSy5Jv9tdpdmXJyighKqm182nh/zBt+tSJkYoNlg==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": "^20.19.0 || >=22.12.0"
+      }
+    },
+    "node_modules/@rolldown/binding-win32-ia32-msvc": {
+      "version": "1.0.0-beta.41",
+      "resolved": "https://registry.npmjs.org/@rolldown/binding-win32-ia32-msvc/-/binding-win32-ia32-msvc-1.0.0-beta.41.tgz",
+      "integrity": "sha512-kANdsDbE5FkEOb5NrCGBJBCaZ2Sabp3D7d4PRqMYJqyLljwh9mDyYyYSv5+QNvdAmifj+f3lviNEUUuUZPEFPw==",
+      "cpu": [
+        "ia32"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": "^20.19.0 || >=22.12.0"
+      }
+    },
+    "node_modules/@rolldown/binding-win32-x64-msvc": {
+      "version": "1.0.0-beta.41",
+      "resolved": "https://registry.npmjs.org/@rolldown/binding-win32-x64-msvc/-/binding-win32-x64-msvc-1.0.0-beta.41.tgz",
+      "integrity": "sha512-UlpxKmFdik0Y2VjZrgUCgoYArZJiZllXgIipdBRV1hw6uK45UbQabSTW6Kp6enuOu7vouYWftwhuxfpE8J2JAg==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": "^20.19.0 || >=22.12.0"
+      }
+    },
+    "node_modules/@rolldown/pluginutils": {
+      "version": "1.0.0-beta.38",
+      "resolved": "https://registry.npmjs.org/@rolldown/pluginutils/-/pluginutils-1.0.0-beta.38.tgz",
+      "integrity": "sha512-N/ICGKleNhA5nc9XXQG/kkKHJ7S55u0x0XUJbbkmdCnFuoRkM1Il12q9q0eX19+M7KKUEPw/daUPIRnxhcxAIw==",
       "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@swc/helpers": {
+      "version": "0.5.17",
+      "resolved": "https://registry.npmjs.org/@swc/helpers/-/helpers-0.5.17.tgz",
+      "integrity": "sha512-5IKx/Y13RsYd+sauPb2x+U/xZikHjolzfuDgTAl/Tdf3Q8rslRvC19NKDLgAJQ6wsqADk10ntlv08nPFw/gO/A==",
+      "license": "Apache-2.0",
+      "dependencies": {
+        "tslib": "^2.8.0"
+      }
+    },
+    "node_modules/@tailwindcss/node": {
+      "version": "4.1.14",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/node/-/node-4.1.14.tgz",
+      "integrity": "sha512-hpz+8vFk3Ic2xssIA3e01R6jkmsAhvkQdXlEbRTk6S10xDAtiQiM3FyvZVGsucefq764euO/b8WUW9ysLdThHw==",
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/remapping": "^2.3.4",
+        "enhanced-resolve": "^5.18.3",
+        "jiti": "^2.6.0",
+        "lightningcss": "1.30.1",
+        "magic-string": "^0.30.19",
+        "source-map-js": "^1.2.1",
+        "tailwindcss": "4.1.14"
+      }
+    },
+    "node_modules/@tailwindcss/node/node_modules/lightningcss": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss/-/lightningcss-1.30.1.tgz",
+      "integrity": "sha512-xi6IyHML+c9+Q3W0S4fCQJOym42pyurFiJUHEcEyHS0CeKzia4yZDEsLlqOFykxOdHpNy0NmvVO31vcSqAxJCg==",
+      "license": "MPL-2.0",
+      "dependencies": {
+        "detect-libc": "^2.0.3"
+      },
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      },
+      "optionalDependencies": {
+        "lightningcss-darwin-arm64": "1.30.1",
+        "lightningcss-darwin-x64": "1.30.1",
+        "lightningcss-freebsd-x64": "1.30.1",
+        "lightningcss-linux-arm-gnueabihf": "1.30.1",
+        "lightningcss-linux-arm64-gnu": "1.30.1",
+        "lightningcss-linux-arm64-musl": "1.30.1",
+        "lightningcss-linux-x64-gnu": "1.30.1",
+        "lightningcss-linux-x64-musl": "1.30.1",
+        "lightningcss-win32-arm64-msvc": "1.30.1",
+        "lightningcss-win32-x64-msvc": "1.30.1"
+      }
+    },
+    "node_modules/@tailwindcss/node/node_modules/lightningcss-darwin-arm64": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-darwin-arm64/-/lightningcss-darwin-arm64-1.30.1.tgz",
+      "integrity": "sha512-c8JK7hyE65X1MHMN+Viq9n11RRC7hgin3HhYKhrMyaXflk5GVplZ60IxyoVtzILeKr+xAJwg6zK6sjTBJ0FKYQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/@tailwindcss/node/node_modules/lightningcss-darwin-x64": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-darwin-x64/-/lightningcss-darwin-x64-1.30.1.tgz",
+      "integrity": "sha512-k1EvjakfumAQoTfcXUcHQZhSpLlkAuEkdMBsI/ivWw9hL+7FtilQc0Cy3hrx0AAQrVtQAbMI7YjCgYgvn37PzA==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/@tailwindcss/node/node_modules/lightningcss-freebsd-x64": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-freebsd-x64/-/lightningcss-freebsd-x64-1.30.1.tgz",
+      "integrity": "sha512-kmW6UGCGg2PcyUE59K5r0kWfKPAVy4SltVeut+umLCFoJ53RdCUWxcRDzO1eTaxf/7Q2H7LTquFHPL5R+Gjyig==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "freebsd"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/@tailwindcss/node/node_modules/lightningcss-linux-arm-gnueabihf": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm-gnueabihf/-/lightningcss-linux-arm-gnueabihf-1.30.1.tgz",
+      "integrity": "sha512-MjxUShl1v8pit+6D/zSPq9S9dQ2NPFSQwGvxBCYaBYLPlCWuPh9/t1MRS8iUaR8i+a6w7aps+B4N0S1TYP/R+Q==",
+      "cpu": [
+        "arm"
+      ],
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/@tailwindcss/node/node_modules/lightningcss-linux-arm64-gnu": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-gnu/-/lightningcss-linux-arm64-gnu-1.30.1.tgz",
+      "integrity": "sha512-gB72maP8rmrKsnKYy8XUuXi/4OctJiuQjcuqWNlJQ6jZiWqtPvqFziskH3hnajfvKB27ynbVCucKSm2rkQp4Bw==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/@tailwindcss/node/node_modules/lightningcss-linux-arm64-musl": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-musl/-/lightningcss-linux-arm64-musl-1.30.1.tgz",
+      "integrity": "sha512-jmUQVx4331m6LIX+0wUhBbmMX7TCfjF5FoOH6SD1CttzuYlGNVpA7QnrmLxrsub43ClTINfGSYyHe2HWeLl5CQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/@tailwindcss/node/node_modules/lightningcss-linux-x64-gnu": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-gnu/-/lightningcss-linux-x64-gnu-1.30.1.tgz",
+      "integrity": "sha512-piWx3z4wN8J8z3+O5kO74+yr6ze/dKmPnI7vLqfSqI8bccaTGY5xiSGVIJBDd5K5BHlvVLpUB3S2YCfelyJ1bw==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/@tailwindcss/node/node_modules/lightningcss-linux-x64-musl": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-musl/-/lightningcss-linux-x64-musl-1.30.1.tgz",
+      "integrity": "sha512-rRomAK7eIkL+tHY0YPxbc5Dra2gXlI63HL+v1Pdi1a3sC+tJTcFrHX+E86sulgAXeI7rSzDYhPSeHHjqFhqfeQ==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/@tailwindcss/node/node_modules/lightningcss-win32-arm64-msvc": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-win32-arm64-msvc/-/lightningcss-win32-arm64-msvc-1.30.1.tgz",
+      "integrity": "sha512-mSL4rqPi4iXq5YVqzSsJgMVFENoa4nGTT/GjO2c0Yl9OuQfPsIfncvLrEW6RbbB24WtZ3xP/2CCmI3tNkNV4oA==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/@tailwindcss/node/node_modules/lightningcss-win32-x64-msvc": {
+      "version": "1.30.1",
+      "resolved": "https://registry.npmjs.org/lightningcss-win32-x64-msvc/-/lightningcss-win32-x64-msvc-1.30.1.tgz",
+      "integrity": "sha512-PVqXh48wh4T53F/1CCu8PIPCxLzWyCnn/9T5W1Jpmdy5h9Cwd+0YQS6/LwhHXSafuc61/xg9Lv5OrCby6a++jg==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "MPL-2.0",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">= 12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/parcel"
+      }
+    },
+    "node_modules/@tailwindcss/oxide": {
+      "version": "4.1.14",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide/-/oxide-4.1.14.tgz",
+      "integrity": "sha512-23yx+VUbBwCg2x5XWdB8+1lkPajzLmALEfMb51zZUBYaYVPDQvBSD/WYDqiVyBIo2BZFa3yw1Rpy3G2Jp+K0dw==",
+      "hasInstallScript": true,
+      "license": "MIT",
+      "dependencies": {
+        "detect-libc": "^2.0.4",
+        "tar": "^7.5.1"
+      },
+      "engines": {
+        "node": ">= 10"
+      },
+      "optionalDependencies": {
+        "@tailwindcss/oxide-android-arm64": "4.1.14",
+        "@tailwindcss/oxide-darwin-arm64": "4.1.14",
+        "@tailwindcss/oxide-darwin-x64": "4.1.14",
+        "@tailwindcss/oxide-freebsd-x64": "4.1.14",
+        "@tailwindcss/oxide-linux-arm-gnueabihf": "4.1.14",
+        "@tailwindcss/oxide-linux-arm64-gnu": "4.1.14",
+        "@tailwindcss/oxide-linux-arm64-musl": "4.1.14",
+        "@tailwindcss/oxide-linux-x64-gnu": "4.1.14",
+        "@tailwindcss/oxide-linux-x64-musl": "4.1.14",
+        "@tailwindcss/oxide-wasm32-wasi": "4.1.14",
+        "@tailwindcss/oxide-win32-arm64-msvc": "4.1.14",
+        "@tailwindcss/oxide-win32-x64-msvc": "4.1.14"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-android-arm64": {
+      "version": "4.1.14",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-android-arm64/-/oxide-android-arm64-4.1.14.tgz",
+      "integrity": "sha512-a94ifZrGwMvbdeAxWoSuGcIl6/DOP5cdxagid7xJv6bwFp3oebp7y2ImYsnZBMTwjn5Ev5xESvS3FFYUGgPODQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "android"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-darwin-arm64": {
+      "version": "4.1.14",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-arm64/-/oxide-darwin-arm64-4.1.14.tgz",
+      "integrity": "sha512-HkFP/CqfSh09xCnrPJA7jud7hij5ahKyWomrC3oiO2U9i0UjP17o9pJbxUN0IJ471GTQQmzwhp0DEcpbp4MZTA==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-darwin-x64": {
+      "version": "4.1.14",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-x64/-/oxide-darwin-x64-4.1.14.tgz",
+      "integrity": "sha512-eVNaWmCgdLf5iv6Qd3s7JI5SEFBFRtfm6W0mphJYXgvnDEAZ5sZzqmI06bK6xo0IErDHdTA5/t7d4eTfWbWOFw==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-freebsd-x64": {
+      "version": "4.1.14",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-freebsd-x64/-/oxide-freebsd-x64-4.1.14.tgz",
+      "integrity": "sha512-QWLoRXNikEuqtNb0dhQN6wsSVVjX6dmUFzuuiL09ZeXju25dsei2uIPl71y2Ic6QbNBsB4scwBoFnlBfabHkEw==",
+      "cpu": [
+        "x64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "freebsd"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-linux-arm-gnueabihf": {
+      "version": "4.1.14",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm-gnueabihf/-/oxide-linux-arm-gnueabihf-4.1.14.tgz",
+      "integrity": "sha512-VB4gjQni9+F0VCASU+L8zSIyjrLLsy03sjcR3bM0V2g4SNamo0FakZFKyUQ96ZVwGK4CaJsc9zd/obQy74o0Fw==",
+      "cpu": [
+        "arm"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-linux-arm64-gnu": {
+      "version": "4.1.14",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-gnu/-/oxide-linux-arm64-gnu-4.1.14.tgz",
+      "integrity": "sha512-qaEy0dIZ6d9vyLnmeg24yzA8XuEAD9WjpM5nIM1sUgQ/Zv7cVkharPDQcmm/t/TvXoKo/0knI3me3AGfdx6w1w==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-linux-arm64-musl": {
+      "version": "4.1.14",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-musl/-/oxide-linux-arm64-musl-4.1.14.tgz",
+      "integrity": "sha512-ISZjT44s59O8xKsPEIesiIydMG/sCXoMBCqsphDm/WcbnuWLxxb+GcvSIIA5NjUw6F8Tex7s5/LM2yDy8RqYBQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">= 10"
+      }
+    },
+    "node_modules/@tailwindcss/oxide-linux-x64-gnu": {
+      "version": "4.1.14",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-gnu/-/oxide-linux-x64-gnu-4.1.14.tgz",
+      "integrity": "sha512-02c6JhLPJj10L2caH4U0zF8Hji4dOeahmuMl23stk0MU1wfd1OraE7rOloidSF8W5JTHkFdVo/O7uRUJJnUAJg==",
+      "cpu": [
+        "x64"
+      ],
       "license": "MIT",
       "optional": true,
       "os": [
         "linux"
       ],
       "engines": {
-        "node": "^20.19.0 || >=22.12.0"
+        "node": ">= 10"
       }
     },
-    "node_modules/@rolldown/binding-openharmony-arm64": {
-      "version": "1.0.0-beta.41",
-      "resolved": "https://registry.npmjs.org/@rolldown/binding-openharmony-arm64/-/binding-openharmony-arm64-1.0.0-beta.41.tgz",
-      "integrity": "sha512-PHVxYhBpi8UViS3/hcvQQb9RFqCtvFmFU1PvUoTRiUdBtgHA6fONNHU4x796lgzNlVSD3DO/MZNk1s5/ozSMQg==",
+    "node_modules/@tailwindcss/oxide-linux-x64-musl": {
+      "version": "4.1.14",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-musl/-/oxide-linux-x64-musl-4.1.14.tgz",
+      "integrity": "sha512-TNGeLiN1XS66kQhxHG/7wMeQDOoL0S33x9BgmydbrWAb9Qw0KYdd8o1ifx4HOGDWhVmJ+Ul+JQ7lyknQFilO3Q==",
       "cpu": [
-        "arm64"
+        "x64"
       ],
-      "dev": true,
       "license": "MIT",
       "optional": true,
       "os": [
-        "openharmony"
+        "linux"
       ],
       "engines": {
-        "node": "^20.19.0 || >=22.12.0"
+        "node": ">= 10"
       }
     },
-    "node_modules/@rolldown/binding-wasm32-wasi": {
-      "version": "1.0.0-beta.41",
-      "resolved": "https://registry.npmjs.org/@rolldown/binding-wasm32-wasi/-/binding-wasm32-wasi-1.0.0-beta.41.tgz",
-      "integrity": "sha512-OAfcO37ME6GGWmj9qTaDT7jY4rM0T2z0/8ujdQIJQ2x2nl+ztO32EIwURfmXOK0U1tzkyuaKYvE34Pug/ucXlQ==",
+    "node_modules/@tailwindcss/oxide-wasm32-wasi": {
+      "version": "4.1.14",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-wasm32-wasi/-/oxide-wasm32-wasi-4.1.14.tgz",
+      "integrity": "sha512-uZYAsaW/jS/IYkd6EWPJKW/NlPNSkWkBlaeVBi/WsFQNP05/bzkebUL8FH1pdsqx4f2fH/bWFcUABOM9nfiJkQ==",
+      "bundleDependencies": [
+        "@napi-rs/wasm-runtime",
+        "@emnapi/core",
+        "@emnapi/runtime",
+        "@tybys/wasm-util",
+        "@emnapi/wasi-threads",
+        "tslib"
+      ],
       "cpu": [
         "wasm32"
       ],
-      "dev": true,
       "license": "MIT",
       "optional": true,
       "dependencies": {
-        "@napi-rs/wasm-runtime": "^1.0.5"
+        "@emnapi/core": "^1.5.0",
+        "@emnapi/runtime": "^1.5.0",
+        "@emnapi/wasi-threads": "^1.1.0",
+        "@napi-rs/wasm-runtime": "^1.0.5",
+        "@tybys/wasm-util": "^0.10.1",
+        "tslib": "^2.4.0"
       },
       "engines": {
         "node": ">=14.0.0"
       }
     },
-    "node_modules/@rolldown/binding-win32-arm64-msvc": {
-      "version": "1.0.0-beta.41",
-      "resolved": "https://registry.npmjs.org/@rolldown/binding-win32-arm64-msvc/-/binding-win32-arm64-msvc-1.0.0-beta.41.tgz",
-      "integrity": "sha512-NIYGuCcuXaq5BC4Q3upbiMBvmZsTsEPG9k/8QKQdmrch+ocSy5Jv9tdpdmXJyighKqm182nh/zBt+tSJkYoNlg==",
+    "node_modules/@tailwindcss/oxide-win32-arm64-msvc": {
+      "version": "4.1.14",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-arm64-msvc/-/oxide-win32-arm64-msvc-4.1.14.tgz",
+      "integrity": "sha512-Az0RnnkcvRqsuoLH2Z4n3JfAef0wElgzHD5Aky/e+0tBUxUhIeIqFBTMNQvmMRSP15fWwmvjBxZ3Q8RhsDnxAA==",
       "cpu": [
         "arm64"
       ],
-      "dev": true,
       "license": "MIT",
       "optional": true,
       "os": [
         "win32"
       ],
       "engines": {
-        "node": "^20.19.0 || >=22.12.0"
+        "node": ">= 10"
       }
     },
-    "node_modules/@rolldown/binding-win32-ia32-msvc": {
-      "version": "1.0.0-beta.41",
-      "resolved": "https://registry.npmjs.org/@rolldown/binding-win32-ia32-msvc/-/binding-win32-ia32-msvc-1.0.0-beta.41.tgz",
-      "integrity": "sha512-kANdsDbE5FkEOb5NrCGBJBCaZ2Sabp3D7d4PRqMYJqyLljwh9mDyYyYSv5+QNvdAmifj+f3lviNEUUuUZPEFPw==",
+    "node_modules/@tailwindcss/oxide-win32-x64-msvc": {
+      "version": "4.1.14",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-x64-msvc/-/oxide-win32-x64-msvc-4.1.14.tgz",
+      "integrity": "sha512-ttblVGHgf68kEE4om1n/n44I0yGPkCPbLsqzjvybhpwa6mKKtgFfAzy6btc3HRmuW7nHe0OOrSeNP9sQmmH9XA==",
       "cpu": [
-        "ia32"
+        "x64"
       ],
-      "dev": true,
       "license": "MIT",
       "optional": true,
       "os": [
         "win32"
       ],
       "engines": {
-        "node": "^20.19.0 || >=22.12.0"
+        "node": ">= 10"
       }
     },
-    "node_modules/@rolldown/binding-win32-x64-msvc": {
-      "version": "1.0.0-beta.41",
-      "resolved": "https://registry.npmjs.org/@rolldown/binding-win32-x64-msvc/-/binding-win32-x64-msvc-1.0.0-beta.41.tgz",
-      "integrity": "sha512-UlpxKmFdik0Y2VjZrgUCgoYArZJiZllXgIipdBRV1hw6uK45UbQabSTW6Kp6enuOu7vouYWftwhuxfpE8J2JAg==",
-      "cpu": [
-        "x64"
-      ],
-      "dev": true,
+    "node_modules/@tailwindcss/vite": {
+      "version": "4.1.14",
+      "resolved": "https://registry.npmjs.org/@tailwindcss/vite/-/vite-4.1.14.tgz",
+      "integrity": "sha512-BoFUoU0XqgCUS1UXWhmDJroKKhNXeDzD7/XwabjkDIAbMnc4ULn5e2FuEuBbhZ6ENZoSYzKlzvZ44Yr6EUDUSA==",
       "license": "MIT",
-      "optional": true,
-      "os": [
-        "win32"
-      ],
-      "engines": {
-        "node": "^20.19.0 || >=22.12.0"
+      "dependencies": {
+        "@tailwindcss/node": "4.1.14",
+        "@tailwindcss/oxide": "4.1.14",
+        "tailwindcss": "4.1.14"
+      },
+      "peerDependencies": {
+        "vite": "^5.2.0 || ^6 || ^7"
       }
     },
-    "node_modules/@rolldown/pluginutils": {
-      "version": "1.0.0-beta.38",
-      "resolved": "https://registry.npmjs.org/@rolldown/pluginutils/-/pluginutils-1.0.0-beta.38.tgz",
-      "integrity": "sha512-N/ICGKleNhA5nc9XXQG/kkKHJ7S55u0x0XUJbbkmdCnFuoRkM1Il12q9q0eX19+M7KKUEPw/daUPIRnxhcxAIw==",
-      "dev": true,
-      "license": "MIT"
-    },
     "node_modules/@tybys/wasm-util": {
       "version": "0.10.1",
       "resolved": "https://registry.npmjs.org/@tybys/wasm-util/-/wasm-util-0.10.1.tgz",
       "integrity": "sha512-9tTaPJLSiejZKx+Bmog4uSubteqTvFrVrURwkmHixBo0G4seD0zUxp98E1DzUBJxLQ3NPwXrGKDiVjwx/DpPsg==",
-      "dev": true,
       "license": "MIT",
       "optional": true,
       "dependencies": {
@@ -962,11 +1548,16 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/@types/prop-types": {
+      "version": "15.7.15",
+      "resolved": "https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.15.tgz",
+      "integrity": "sha512-F6bEyamV9jKGAFBEmlQnesRPGOQqS2+Uwi0Em15xenOxHaf2hv6L8YCVn3rPdPJOiJfPiCnLIRyvwVaqMY3MIw==",
+      "license": "MIT"
+    },
     "node_modules/@types/react": {
       "version": "19.2.0",
       "resolved": "https://registry.npmjs.org/@types/react/-/react-19.2.0.tgz",
       "integrity": "sha512-1LOH8xovvsKsCBq1wnT4ntDUdCJKmnEakhsuoUSy6ExlHCkGP2hqnatagYTgFk6oeL0VU31u7SNjunPN+GchtA==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "csstype": "^3.0.2"
@@ -982,6 +1573,21 @@
         "@types/react": "^19.2.0"
       }
     },
+    "node_modules/@types/react-transition-group": {
+      "version": "4.4.12",
+      "resolved": "https://registry.npmjs.org/@types/react-transition-group/-/react-transition-group-4.4.12.tgz",
+      "integrity": "sha512-8TV6R3h2j7a91c+1DXdJi3Syo69zzIZbz7Lg5tORM5LEJG7X/E6a1V3drRyBRZq7/utz7A+c4OgYLiLcYGHG6w==",
+      "license": "MIT",
+      "peerDependencies": {
+        "@types/react": "*"
+      }
+    },
+    "node_modules/@types/warning": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/@types/warning/-/warning-3.0.3.tgz",
+      "integrity": "sha512-D1XC7WK8K+zZEveUPY+cf4+kgauk8N4eHr/XIHXGlGYkHLud6hK9lYfZk1ry1TNh798cZUCgb6MqGEG8DkJt6Q==",
+      "license": "MIT"
+    },
     "node_modules/@vitejs/plugin-react": {
       "version": "5.0.4",
       "resolved": "https://registry.npmjs.org/@vitejs/plugin-react/-/plugin-react-5.0.4.tgz",
@@ -1075,7 +1681,6 @@
       "version": "4.2.0",
       "resolved": "https://registry.npmjs.org/ansis/-/ansis-4.2.0.tgz",
       "integrity": "sha512-HqZ5rWlFjGiV0tDm3UxxgNRqsOTniqoKZu0pIAfh7TZQMGuZK+hH0drySty0si0QXj1ieop4+SkSfPZBPPkHig==",
-      "dev": true,
       "license": "ISC",
       "engines": {
         "node": ">=14"
@@ -1105,6 +1710,41 @@
         "baseline-browser-mapping": "dist/cli.js"
       }
     },
+    "node_modules/bootstrap": {
+      "version": "5.3.8",
+      "resolved": "https://registry.npmjs.org/bootstrap/-/bootstrap-5.3.8.tgz",
+      "integrity": "sha512-HP1SZDqaLDPwsNiqRqi5NcP0SSXciX2s9E+RyqJIIqGo+vJeN5AJVM98CXmW/Wux0nQ5L7jeWUdplCEf0Ee+tg==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/twbs"
+        },
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/bootstrap"
+        }
+      ],
+      "license": "MIT",
+      "peerDependencies": {
+        "@popperjs/core": "^2.11.8"
+      }
+    },
+    "node_modules/bootstrap-icons": {
+      "version": "1.13.1",
+      "resolved": "https://registry.npmjs.org/bootstrap-icons/-/bootstrap-icons-1.13.1.tgz",
+      "integrity": "sha512-ijombt4v6bv5CLeXvRWKy7CuM3TRTuPEuGaGKvTV5cz65rQSY8RQ2JcHt6b90cBBAC7s8fsf2EkQDldzCoXUjw==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/twbs"
+        },
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/bootstrap"
+        }
+      ],
+      "license": "MIT"
+    },
     "node_modules/brace-expansion": {
       "version": "1.1.12",
       "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
@@ -1198,6 +1838,33 @@
         "url": "https://github.com/chalk/chalk?sponsor=1"
       }
     },
+    "node_modules/chart.js": {
+      "version": "4.5.0",
+      "resolved": "https://registry.npmjs.org/chart.js/-/chart.js-4.5.0.tgz",
+      "integrity": "sha512-aYeC/jDgSEx8SHWZvANYMioYMZ2KX02W6f6uVfyteuCGcadDLcYVHdfdygsTQkQ4TKn5lghoojAsPj5pu0SnvQ==",
+      "license": "MIT",
+      "dependencies": {
+        "@kurkle/color": "^0.3.0"
+      },
+      "engines": {
+        "pnpm": ">=8"
+      }
+    },
+    "node_modules/chownr": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/chownr/-/chownr-3.0.0.tgz",
+      "integrity": "sha512-+IxzY9BZOQd/XuYPRmrvEVjF/nqj5kgT4kEq7VofrDoM1MxoRjEWkrCC3EtLi59TVawxTAn+orJwFQcrqEN1+g==",
+      "license": "BlueOak-1.0.0",
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/classnames": {
+      "version": "2.5.1",
+      "resolved": "https://registry.npmjs.org/classnames/-/classnames-2.5.1.tgz",
+      "integrity": "sha512-saHYOzhIQs6wy2sVxTM6bUDsQO4F50V9RQ22qBpEdCW+I+/Wmke2HOl6lS6dTpdxVhb88/I6+Hs+438c3lfUow==",
+      "license": "MIT"
+    },
     "node_modules/clsx": {
       "version": "2.1.1",
       "resolved": "https://registry.npmjs.org/clsx/-/clsx-2.1.1.tgz",
@@ -1260,9 +1927,18 @@
       "version": "3.1.3",
       "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
       "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",
-      "dev": true,
       "license": "MIT"
     },
+    "node_modules/daisyui": {
+      "version": "5.1.27",
+      "resolved": "https://registry.npmjs.org/daisyui/-/daisyui-5.1.27.tgz",
+      "integrity": "sha512-oCC2RwjrGRPTeEpaXoNmYydzVfSRdyJCthFsi/Q5PErAvaoD8kDarxlW+wiPAx2WmM8W8lXvyAHJUqjObCMWOQ==",
+      "dev": true,
+      "license": "MIT",
+      "funding": {
+        "url": "https://github.com/saadeghi/daisyui?sponsor=1"
+      }
+    },
     "node_modules/debug": {
       "version": "4.4.3",
       "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.3.tgz",
@@ -1288,16 +1964,34 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/dequal": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/dequal/-/dequal-2.0.3.tgz",
+      "integrity": "sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
     "node_modules/detect-libc": {
       "version": "2.1.1",
       "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-2.1.1.tgz",
       "integrity": "sha512-ecqj/sy1jcK1uWrwpR67UhYrIFQ+5WlGxth34WquCbamhFA6hkkwiu37o6J5xCHdo1oixJRfVRw+ywV+Hq/0Aw==",
-      "dev": true,
       "license": "Apache-2.0",
       "engines": {
         "node": ">=8"
       }
     },
+    "node_modules/dom-helpers": {
+      "version": "5.2.1",
+      "resolved": "https://registry.npmjs.org/dom-helpers/-/dom-helpers-5.2.1.tgz",
+      "integrity": "sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==",
+      "license": "MIT",
+      "dependencies": {
+        "@babel/runtime": "^7.8.7",
+        "csstype": "^3.0.2"
+      }
+    },
     "node_modules/electron-to-chromium": {
       "version": "1.5.230",
       "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.230.tgz",
@@ -1305,6 +1999,19 @@
       "dev": true,
       "license": "ISC"
     },
+    "node_modules/enhanced-resolve": {
+      "version": "5.18.3",
+      "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.18.3.tgz",
+      "integrity": "sha512-d4lC8xfavMeBjzGr2vECC3fsGXziXZQyJxD868h2M/mBI3PwAuODxAkLkq5HYuvrPYcUtiLzsTo8U3PgX3Ocww==",
+      "license": "MIT",
+      "dependencies": {
+        "graceful-fs": "^4.2.4",
+        "tapable": "^2.2.0"
+      },
+      "engines": {
+        "node": ">=10.13.0"
+      }
+    },
     "node_modules/escalade": {
       "version": "3.2.0",
       "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
@@ -1549,7 +2256,6 @@
       "version": "6.5.0",
       "resolved": "https://registry.npmjs.org/fdir/-/fdir-6.5.0.tgz",
       "integrity": "sha512-tIbYtZbucOs0BRGqPJkshJUYdL+SDH7dVM8gjy+ERp3WAUjLEFJE+02kanyHtwjWOnwrKYBiwAmM0p4kLJAnXg==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=12.0.0"
@@ -1628,7 +2334,6 @@
       "version": "2.3.3",
       "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
       "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
-      "dev": true,
       "hasInstallScript": true,
       "license": "MIT",
       "optional": true,
@@ -1675,6 +2380,12 @@
         "url": "https://github.com/sponsors/sindresorhus"
       }
     },
+    "node_modules/graceful-fs": {
+      "version": "4.2.11",
+      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
+      "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
+      "license": "ISC"
+    },
     "node_modules/has-flag": {
       "version": "4.0.0",
       "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
@@ -1722,6 +2433,15 @@
         "node": ">=0.8.19"
       }
     },
+    "node_modules/invariant": {
+      "version": "2.2.4",
+      "resolved": "https://registry.npmjs.org/invariant/-/invariant-2.2.4.tgz",
+      "integrity": "sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==",
+      "license": "MIT",
+      "dependencies": {
+        "loose-envify": "^1.0.0"
+      }
+    },
     "node_modules/is-extglob": {
       "version": "2.1.1",
       "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
@@ -1752,11 +2472,19 @@
       "dev": true,
       "license": "ISC"
     },
+    "node_modules/jiti": {
+      "version": "2.6.1",
+      "resolved": "https://registry.npmjs.org/jiti/-/jiti-2.6.1.tgz",
+      "integrity": "sha512-ekilCSN1jwRvIbgeg/57YFh8qQDNbwDb9xT/qu2DAHbFFZUicIl4ygVaAvzveMhMVr3LnpSKTNnwt8PoOfmKhQ==",
+      "license": "MIT",
+      "bin": {
+        "jiti": "lib/jiti-cli.mjs"
+      }
+    },
     "node_modules/js-tokens": {
       "version": "4.0.0",
       "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
       "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/js-yaml": {
@@ -1847,7 +2575,6 @@
       "version": "1.30.2",
       "resolved": "https://registry.npmjs.org/lightningcss/-/lightningcss-1.30.2.tgz",
       "integrity": "sha512-utfs7Pr5uJyyvDETitgsaqSyjCb2qNRAtuqUeWIAKztsOYdcACf2KtARYXg2pSvhkt+9NfoaNY7fxjl6nuMjIQ==",
-      "dev": true,
       "license": "MPL-2.0",
       "dependencies": {
         "detect-libc": "^2.0.3"
@@ -1880,7 +2607,6 @@
       "cpu": [
         "arm64"
       ],
-      "dev": true,
       "license": "MPL-2.0",
       "optional": true,
       "os": [
@@ -1901,7 +2627,6 @@
       "cpu": [
         "arm64"
       ],
-      "dev": true,
       "license": "MPL-2.0",
       "optional": true,
       "os": [
@@ -1922,7 +2647,6 @@
       "cpu": [
         "x64"
       ],
-      "dev": true,
       "license": "MPL-2.0",
       "optional": true,
       "os": [
@@ -1943,7 +2667,6 @@
       "cpu": [
         "x64"
       ],
-      "dev": true,
       "license": "MPL-2.0",
       "optional": true,
       "os": [
@@ -1964,7 +2687,6 @@
       "cpu": [
         "arm"
       ],
-      "dev": true,
       "license": "MPL-2.0",
       "optional": true,
       "os": [
@@ -1985,7 +2707,6 @@
       "cpu": [
         "arm64"
       ],
-      "dev": true,
       "license": "MPL-2.0",
       "optional": true,
       "os": [
@@ -2006,7 +2727,6 @@
       "cpu": [
         "arm64"
       ],
-      "dev": true,
       "license": "MPL-2.0",
       "optional": true,
       "os": [
@@ -2027,7 +2747,6 @@
       "cpu": [
         "x64"
       ],
-      "dev": true,
       "license": "MPL-2.0",
       "optional": true,
       "os": [
@@ -2048,7 +2767,6 @@
       "cpu": [
         "x64"
       ],
-      "dev": true,
       "license": "MPL-2.0",
       "optional": true,
       "os": [
@@ -2069,7 +2787,6 @@
       "cpu": [
         "arm64"
       ],
-      "dev": true,
       "license": "MPL-2.0",
       "optional": true,
       "os": [
@@ -2090,7 +2807,6 @@
       "cpu": [
         "x64"
       ],
-      "dev": true,
       "license": "MPL-2.0",
       "optional": true,
       "os": [
@@ -2127,6 +2843,18 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/loose-envify": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
+      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
+      "license": "MIT",
+      "dependencies": {
+        "js-tokens": "^3.0.0 || ^4.0.0"
+      },
+      "bin": {
+        "loose-envify": "cli.js"
+      }
+    },
     "node_modules/lru-cache": {
       "version": "5.1.1",
       "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
@@ -2146,6 +2874,15 @@
         "react": "^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0"
       }
     },
+    "node_modules/magic-string": {
+      "version": "0.30.19",
+      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.30.19.tgz",
+      "integrity": "sha512-2N21sPY9Ws53PZvsEpVtNuSW+ScYbQdp4b9qUaL+9QkHUrGFKo56Lg9Emg5s9V/qrtNBmiR01sYhUOwu3H+VOw==",
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/sourcemap-codec": "^1.5.5"
+      }
+    },
     "node_modules/minimatch": {
       "version": "3.1.2",
       "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
@@ -2159,6 +2896,27 @@
         "node": "*"
       }
     },
+    "node_modules/minipass": {
+      "version": "7.1.2",
+      "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
+      "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
+      "license": "ISC",
+      "engines": {
+        "node": ">=16 || 14 >=14.17"
+      }
+    },
+    "node_modules/minizlib": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-3.1.0.tgz",
+      "integrity": "sha512-KZxYo1BUkWD2TVFLr0MQoM8vUUigWD3LlD83a/75BqC+4qE0Hb1Vo5v1FgcfaNXvfXzr+5EhQ6ing/CaBijTlw==",
+      "license": "MIT",
+      "dependencies": {
+        "minipass": "^7.1.2"
+      },
+      "engines": {
+        "node": ">= 18"
+      }
+    },
     "node_modules/ms": {
       "version": "2.1.3",
       "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
@@ -2170,7 +2928,6 @@
       "version": "3.3.11",
       "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
       "integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
-      "dev": true,
       "funding": [
         {
           "type": "github",
@@ -2219,6 +2976,15 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/object-assign": {
+      "version": "4.1.1",
+      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
+      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
     "node_modules/optionator": {
       "version": "0.9.4",
       "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
@@ -2306,14 +3072,12 @@
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
       "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
-      "dev": true,
       "license": "ISC"
     },
     "node_modules/picomatch": {
       "version": "4.0.3",
       "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-4.0.3.tgz",
       "integrity": "sha512-5gTmgEY/sqK6gFXLIsQNH19lWb4ebPDLA4SdLP7dsWkIXHWlG66oPuVvXSGFPppYZz8ZDZq0dYYrbHfBCVUb1Q==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=12"
@@ -2326,7 +3090,6 @@
       "version": "8.5.6",
       "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.6.tgz",
       "integrity": "sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==",
-      "dev": true,
       "funding": [
         {
           "type": "opencollective",
@@ -2361,6 +3124,30 @@
         "node": ">= 0.8.0"
       }
     },
+    "node_modules/prop-types": {
+      "version": "15.8.1",
+      "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
+      "integrity": "sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==",
+      "license": "MIT",
+      "dependencies": {
+        "loose-envify": "^1.4.0",
+        "object-assign": "^4.1.1",
+        "react-is": "^16.13.1"
+      }
+    },
+    "node_modules/prop-types-extra": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/prop-types-extra/-/prop-types-extra-1.1.1.tgz",
+      "integrity": "sha512-59+AHNnHYCdiC+vMwY52WmvP5dM3QLeoumYuEyceQDi9aEhtwN9zIQ2ZNo25sMyXnbh32h+P1ezDsUpUH3JAew==",
+      "license": "MIT",
+      "dependencies": {
+        "react-is": "^16.3.2",
+        "warning": "^4.0.0"
+      },
+      "peerDependencies": {
+        "react": ">=0.14.0"
+      }
+    },
     "node_modules/psl": {
       "version": "1.15.0",
       "resolved": "https://registry.npmjs.org/psl/-/psl-1.15.0.tgz",
@@ -2397,6 +3184,37 @@
         "node": ">=0.10.0"
       }
     },
+    "node_modules/react-bootstrap": {
+      "version": "2.10.10",
+      "resolved": "https://registry.npmjs.org/react-bootstrap/-/react-bootstrap-2.10.10.tgz",
+      "integrity": "sha512-gMckKUqn8aK/vCnfwoBpBVFUGT9SVQxwsYrp9yDHt0arXMamxALerliKBxr1TPbntirK/HGrUAHYbAeQTa9GHQ==",
+      "license": "MIT",
+      "dependencies": {
+        "@babel/runtime": "^7.24.7",
+        "@restart/hooks": "^0.4.9",
+        "@restart/ui": "^1.9.4",
+        "@types/prop-types": "^15.7.12",
+        "@types/react-transition-group": "^4.4.6",
+        "classnames": "^2.3.2",
+        "dom-helpers": "^5.2.1",
+        "invariant": "^2.2.4",
+        "prop-types": "^15.8.1",
+        "prop-types-extra": "^1.1.0",
+        "react-transition-group": "^4.4.5",
+        "uncontrollable": "^7.2.1",
+        "warning": "^4.0.3"
+      },
+      "peerDependencies": {
+        "@types/react": ">=16.14.8",
+        "react": ">=16.14.0",
+        "react-dom": ">=16.14.0"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/react-dom": {
       "version": "19.2.0",
       "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-19.2.0.tgz",
@@ -2409,6 +3227,18 @@
         "react": "^19.2.0"
       }
     },
+    "node_modules/react-is": {
+      "version": "16.13.1",
+      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
+      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==",
+      "license": "MIT"
+    },
+    "node_modules/react-lifecycles-compat": {
+      "version": "3.0.4",
+      "resolved": "https://registry.npmjs.org/react-lifecycles-compat/-/react-lifecycles-compat-3.0.4.tgz",
+      "integrity": "sha512-fBASbA6LnOU9dOU2eW7aQ8xmYBSXUIWr+UmF9b1efZBazGNO+rcXT/icdKnYm2pTwcRylVUYwW7H1PHfLekVzA==",
+      "license": "MIT"
+    },
     "node_modules/react-refresh": {
       "version": "0.17.0",
       "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.17.0.tgz",
@@ -2432,6 +3262,22 @@
         "react-dom": "^18 || ^19"
       }
     },
+    "node_modules/react-transition-group": {
+      "version": "4.4.5",
+      "resolved": "https://registry.npmjs.org/react-transition-group/-/react-transition-group-4.4.5.tgz",
+      "integrity": "sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==",
+      "license": "BSD-3-Clause",
+      "dependencies": {
+        "@babel/runtime": "^7.5.5",
+        "dom-helpers": "^5.0.1",
+        "loose-envify": "^1.4.0",
+        "prop-types": "^15.6.2"
+      },
+      "peerDependencies": {
+        "react": ">=16.6.0",
+        "react-dom": ">=16.6.0"
+      }
+    },
     "node_modules/requires-port": {
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/requires-port/-/requires-port-1.0.0.tgz",
@@ -2452,7 +3298,6 @@
       "version": "1.0.0-beta.41",
       "resolved": "https://registry.npmjs.org/rolldown/-/rolldown-1.0.0-beta.41.tgz",
       "integrity": "sha512-U+NPR0Bkg3wm61dteD2L4nAM1U9dtaqVrpDXwC36IKRHpEO/Ubpid4Nijpa2imPchcVNHfxVFwSSMJdwdGFUbg==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "@oxc-project/types": "=0.93.0",
@@ -2486,7 +3331,6 @@
       "version": "1.0.0-beta.41",
       "resolved": "https://registry.npmjs.org/@rolldown/pluginutils/-/pluginutils-1.0.0-beta.41.tgz",
       "integrity": "sha512-ycMEPrS3StOIeb87BT3/+bu+blEtyvwQ4zmo2IcJQy0Rd1DAAhKksA0iUZ3MYSpJtjlPhg0Eo6mvVS6ggPhRbw==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/scheduler": {
@@ -2538,7 +3382,6 @@
       "version": "1.2.1",
       "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
       "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
-      "dev": true,
       "license": "BSD-3-Clause",
       "engines": {
         "node": ">=0.10.0"
@@ -2570,11 +3413,54 @@
         "node": ">=8"
       }
     },
+    "node_modules/tailwindcss": {
+      "version": "4.1.14",
+      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-4.1.14.tgz",
+      "integrity": "sha512-b7pCxjGO98LnxVkKjaZSDeNuljC4ueKUddjENJOADtubtdo8llTaJy7HwBMeLNSSo2N5QIAgklslK1+Ir8r6CA==",
+      "license": "MIT"
+    },
+    "node_modules/tapable": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/tapable/-/tapable-2.3.0.tgz",
+      "integrity": "sha512-g9ljZiwki/LfxmQADO3dEY1CbpmXT5Hm2fJ+QaGKwSXUylMybePR7/67YW7jOrrvjEgL1Fmz5kzyAjWVWLlucg==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/webpack"
+      }
+    },
+    "node_modules/tar": {
+      "version": "7.5.1",
+      "resolved": "https://registry.npmjs.org/tar/-/tar-7.5.1.tgz",
+      "integrity": "sha512-nlGpxf+hv0v7GkWBK2V9spgactGOp0qvfWRxUMjqHyzrt3SgwE48DIv/FhqPHJYLHpgW1opq3nERbz5Anq7n1g==",
+      "license": "ISC",
+      "dependencies": {
+        "@isaacs/fs-minipass": "^4.0.0",
+        "chownr": "^3.0.0",
+        "minipass": "^7.1.2",
+        "minizlib": "^3.1.0",
+        "yallist": "^5.0.0"
+      },
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/tar/node_modules/yallist": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/yallist/-/yallist-5.0.0.tgz",
+      "integrity": "sha512-YgvUTfwqyc7UXVMrB+SImsVYSmTS8X/tSrtdNZMImM+n7+QTriRXyXim0mBrTXNeqzVF0KWGgHPeiyViFFrNDw==",
+      "license": "BlueOak-1.0.0",
+      "engines": {
+        "node": ">=18"
+      }
+    },
     "node_modules/tinyglobby": {
       "version": "0.2.15",
       "resolved": "https://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.15.tgz",
       "integrity": "sha512-j2Zq4NyQYG5XMST4cbs02Ak8iJUdxRM0XI5QyxXuZOzKOINmWurp3smXu3y5wDcJrptwpSjgXHzIQxR0omXljQ==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "fdir": "^6.5.0",
@@ -2612,9 +3498,7 @@
       "version": "2.8.1",
       "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
       "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
-      "dev": true,
-      "license": "0BSD",
-      "optional": true
+      "license": "0BSD"
     },
     "node_modules/type-check": {
       "version": "0.4.0",
@@ -2629,6 +3513,21 @@
         "node": ">= 0.8.0"
       }
     },
+    "node_modules/uncontrollable": {
+      "version": "7.2.1",
+      "resolved": "https://registry.npmjs.org/uncontrollable/-/uncontrollable-7.2.1.tgz",
+      "integrity": "sha512-svtcfoTADIB0nT9nltgjujTi7BzVmwjZClOmskKu/E8FW9BXzg9os8OLr4f8Dlnk0rYWJIWr4wv9eKUXiQvQwQ==",
+      "license": "MIT",
+      "dependencies": {
+        "@babel/runtime": "^7.6.3",
+        "@types/react": ">=16.9.11",
+        "invariant": "^2.2.4",
+        "react-lifecycles-compat": "^3.0.4"
+      },
+      "peerDependencies": {
+        "react": ">=15.0.0"
+      }
+    },
     "node_modules/universalify": {
       "version": "0.2.0",
       "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.2.0.tgz",
@@ -2694,7 +3593,6 @@
       "version": "7.1.14",
       "resolved": "https://registry.npmjs.org/rolldown-vite/-/rolldown-vite-7.1.14.tgz",
       "integrity": "sha512-eSiiRJmovt8qDJkGyZuLnbxAOAdie6NCmmd0NkTC0RJI9duiSBTfr8X2mBYJOUFzxQa2USaHmL99J9uMxkjCyw==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "@oxc-project/runtime": "0.92.0",
@@ -2766,6 +3664,15 @@
         }
       }
     },
+    "node_modules/warning": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/warning/-/warning-4.0.3.tgz",
+      "integrity": "sha512-rpJyN222KWIvHJ/F53XSZv0Zl/accqHR8et1kpaMTD/fLCRxtV8iX8czMzY7sVZupTI3zcUTg8eycS2kNF9l6w==",
+      "license": "MIT",
+      "dependencies": {
+        "loose-envify": "^1.0.0"
+      }
+    },
     "node_modules/webidl-conversions": {
       "version": "3.0.1",
       "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
diff --git a/package.json b/package.json
index 01f4cac..af122b3 100644
--- a/package.json
+++ b/package.json
@@ -11,16 +11,23 @@
   },
   "dependencies": {
     "@microsoft/signalr": "^9.0.6",
+    "@tailwindcss/vite": "^4.1.14",
+    "bootstrap": "^5.3.8",
+    "bootstrap-icons": "^1.13.1",
+    "chart.js": "^4.5.0",
     "lucide-react": "^0.544.0",
     "react": "^19.1.1",
+    "react-bootstrap": "^2.10.10",
     "react-dom": "^19.1.1",
-    "react-toastify": "^11.0.5"
+    "react-toastify": "^11.0.5",
+    "tailwindcss": "^4.1.14"
   },
   "devDependencies": {
     "@eslint/js": "^9.36.0",
     "@types/react": "^19.1.16",
     "@types/react-dom": "^19.1.9",
     "@vitejs/plugin-react": "^5.0.4",
+    "daisyui": "^5.1.27",
     "eslint": "^9.36.0",
     "eslint-plugin-react-hooks": "^5.2.0",
     "eslint-plugin-react-refresh": "^0.4.22",
diff --git a/src/App.css b/src/App.css
index 60a2bf7..ef8082a 100644
--- a/src/App.css
+++ b/src/App.css
@@ -129,4 +129,43 @@
 
 .notification-list::-webkit-scrollbar-thumb:hover {
   background: #94a3b8;
-}
\ No newline at end of file
+}
+/* Gradient backgrounds for header (optional) */
+.bg-gradient-dark {
+  background: linear-gradient(145deg, #1b1f24, #2b3138);
+}
+.bg-gradient-light {
+  background: linear-gradient(145deg, #ffffff, #f2f4f8);
+}
+
+/* Hover effects */
+.hover-glow-light:hover {
+  background-color: rgba(13, 110, 253, 0.05);
+  transition: all 0.25s ease;
+}
+.hover-glow-dark:hover {
+  background-color: rgba(255, 255, 255, 0.05);
+  transition: all 0.25s ease;
+}
+.hover-glow-light:hover {
+  background-color: rgba(13, 110, 253, 0.05);
+  transition: background 0.25s ease;
+}
+
+.hover-glow-dark:hover {
+  background-color: rgba(255, 255, 255, 0.05);
+  transition: background 0.25s ease;
+}
+
+.table th {
+  font-weight: 600;
+  letter-spacing: 0.5px;
+}
+.Toastify__toast {
+  animation: fadeDown 0.4s ease both;
+}
+
+@keyframes fadeDown {
+  0% { transform: translateY(-20px); opacity: 0; }
+  100% { transform: translateY(0); opacity: 1; }
+}
diff --git a/src/App.jsx b/src/App.jsx
index 6722959..d11f203 100644
--- a/src/App.jsx
+++ b/src/App.jsx
@@ -1,446 +1,817 @@
-import { useState, useEffect, useRef } from 'react'
-import { Bell, X, AlertTriangle, Info, CheckCircle, Settings, Search } from 'lucide-react'
-import './App.css'
+// App.jsx
+import { useState, useEffect, useRef } from 'react';
+import { ToastContainer, toast } from 'react-toastify';
+import 'bootstrap/dist/css/bootstrap.min.css';
+import 'bootstrap/dist/js/bootstrap.bundle.min.js';
+import 'react-toastify/dist/ReactToastify.css';
+import {
+  Bell, X, AlertTriangle, Info, CheckCircle, Settings, Search, Cpu, Thermometer, Gauge, Moon, Sun, User, Clock
+} from 'lucide-react';
 
 function App() {
-  const [alerts, setAlerts] = useState([])
-  const [isConnected, setIsConnected] = useState(false)
-  const [showNotifications, setShowNotifications] = useState(false)
-  const connectionRef = useRef(null)
-
-  const [sensors, setSensors] = useState([])
-  const [loadingSensors, setLoadingSensors] = useState(false)
-  const [savingSensorId, setSavingSensorId] = useState(null)
-
-  // 🧩 NEW STATES FOR ALERT LOG
-  const [alertLog, setAlertLog] = useState([])
-  const [loadingLog, setLoadingLog] = useState(false)
-  const [filter, setFilter] = useState({
-    sensorId: '',
-    digitalModuleId: '',
-    status: '',
-    from: '',
-    to: ''
-  })
-
-  const SENSOR_API = "http://localhost:5167/api/Sensor"
-  const ALERT_API = "http://localhost:5167/api/Alert"
-
-  // ============================
-  // 🔌 ALERTS VIA SIGNALR
-  // ============================
-  useEffect(() => {
-    const initializeConnection = async () => {
-      const { HubConnectionBuilder, LogLevel } = await import('@microsoft/signalr')
-      const connection = new HubConnectionBuilder()
-        .withUrl('http://localhost:5167/alertHub')
-        .configureLogging(LogLevel.Information)
-        .build()
-
-      connectionRef.current = connection
-
-      connection.on('ReceiveAlert', (alertData) => {
-        setAlerts(prev => [alertData, ...prev.slice(0, 9)])
-        if (!document.hasFocus()) showBrowserNotification(alertData)
-      })
-
-      connection.onclose(() => {
-        setIsConnected(false)
-        setTimeout(initializeConnection, 5000)
-      })
-
-      try {
-        await connection.start()
-        setIsConnected(true)
-      } catch (err) {
-        console.error('Connection failed:', err)
-        setIsConnected(false)
-      }
-    }
+  const [alerts, setAlerts] = useState([]);
+  const [isConnected, setIsConnected] = useState(false);
+  const [sensors, setSensors] = useState([]);
+  const [loadingSensors, setLoadingSensors] = useState(false);
+  const [savingSensorId, setSavingSensorId] = useState(null);
+  const [alertLog, setAlertLog] = useState([]);
+  const [loadingLog, setLoadingLog] = useState(false);
+  const [filter, setFilter] = useState({ sensorId: '', digitalModuleId: '', status: '', from: '', to: '' });
+  const [currentPage, setCurrentPage] = useState(1);
+  const [alertsPerPage] = useState(10);
+  const [unreadAlerts, setUnreadAlerts] = useState(0);
+  const [darkMode, setDarkMode] = useState(false);
+  const [viewAllModal, setViewAllModal] = useState(false);
+
+  // sensor pagination
+  const [sensorPage, setSensorPage] = useState(1);
+  const sensorsPerPage = 5;
+  const indexOfLastSensor = sensorPage * sensorsPerPage;
+  const indexOfFirstSensor = indexOfLastSensor - sensorsPerPage;
+  const currentSensors = sensors.slice(indexOfFirstSensor, indexOfLastSensor);
+  const totalSensorPages = Math.max(1, Math.ceil(sensors.length / sensorsPerPage));
+
+  const connectionRef = useRef(null);
+  const SENSOR_API = "http://localhost:5167/api/Sensor";
+  const ALERT_API = "http://localhost:5167/api/Alert";
+
+
+// ========== SignalR Connection ==========
+useEffect(() => {
+  const initializeConnection = async () => {
+    const { HubConnectionBuilder, LogLevel } = await import('@microsoft/signalr');
+    const connection = new HubConnectionBuilder()
+      .withUrl('http://localhost:5167/alertHub')
+      .configureLogging(LogLevel.Information)
+      .build();
+
+    connectionRef.current = connection;
+
+    // ======= Listen for Alerts =======
+    connection.on('ReceiveAlert', (alertData) => {
+      console.log('New alert received:', alertData);
+
+      // Update local alert list
+      setAlerts(prev => [alertData, ...prev]);
+      setUnreadAlerts(prev => prev + 1);
+
+      // ✅ Show elegant toast
+      showAlertToast(alertData);
+
+      // Browser notification if user not focused
+      if (!document.hasFocus()) showBrowserNotification(alertData);
+    });
+
+    // ======= Handle connection loss =======
+    connection.onclose(() => {
+      setIsConnected(false);
+      console.warn('SignalR connection closed. Reconnecting...');
+      setTimeout(initializeConnection, 5000);
+    });
 
-    initializeConnection()
-    return () => connectionRef.current?.stop()
-  }, [])
-
-  const showBrowserNotification = (alert) => {
-    if ('Notification' in window && Notification.permission === 'granted') {
-      new Notification(`Alert: ${alert.type || 'New Alert'}`, {
-        body: alert.description || alert.summary || 'New alert received',
-        icon: '/vite.svg',
-        tag: alert.alertId
-      })
+    try {
+      await connection.start();
+      setIsConnected(true);
+      console.log('✅ Connected to SignalR hub');
+    } catch (err) {
+      console.error('Connection failed:', err);
+      setIsConnected(false);
     }
-  }
-
-  const getAlertIcon = (status) => {
-    switch (status?.toLowerCase()) {
-      case 'firing': return <AlertTriangle className="w-5 h-5 text-red-500" />
-      case 'resolved': return <CheckCircle className="w-5 h-5 text-green-500" />
-      default: return <Info className="w-5 h-5 text-blue-500" />
+  };
+
+  initializeConnection();
+  return () => connectionRef.current?.stop();
+}, []);
+
+
+// ======= Toast Helper =======
+const showAlertToast = (alertData) => {
+  const { status, alertType, sensorId } = alertData;
+
+  const isFiring = status?.toLowerCase() === 'firing';
+  const isResolved = status?.toLowerCase() === 'resolved';
+
+  toast(
+    <div className="d-flex align-items-center gap-3">
+      {/* Icon Circle */}
+      <div
+        className="rounded-circle d-flex align-items-center justify-content-center shadow-sm"
+        style={{
+          width: '40px',
+          height: '40px',
+          backgroundColor: isFiring ? '#dc3545' : '#28a745',
+          color: 'white',
+          flexShrink: 0,
+          fontSize: '20px',
+        }}
+      >
+        {isFiring ? '⚠️' : '✅'}
+      </div>
+
+      {/* Message */}
+      <div>
+        <h6 className="mb-0 fw-bold">
+          {isFiring ? 'Alert Triggered!' : 'Alert Resolved!'}
+        </h6>
+        <small className="text-muted">
+          {sensorId ? `${sensorId} — ${alertType || 'Threshold'}` : 'Unknown Sensor'}
+        </small>
+      </div>
+    </div>,
+    {
+      position: 'top-center',
+      autoClose: 4000,
+      hideProgressBar: false,
+      closeOnClick: true,
+      pauseOnHover: true,
+      draggable: false,
+      theme: isFiring ? 'colored' : 'light',
+      style: {
+        background: isFiring ? '#fff5f5' : '#f1fff5',
+        border: `1px solid ${isFiring ? '#dc3545' : '#28a745'}`,
+        borderRadius: '12px',
+        minWidth: '320px',
+        boxShadow: '0 2px 10px rgba(0,0,0,0.15)',
+      },
     }
+  );
+};
+
+
+// ======= Browser Notification (when tab inactive) =======
+const showBrowserNotification = (alert) => {
+  if ('Notification' in window && Notification.permission === 'granted') {
+    const isFiring = alert.status?.toLowerCase() === 'firing';
+    const title = isFiring
+      ? `⚠️ Alert: ${alert.sensorId || 'Unknown Sensor'}`
+      : `✅ Resolved: ${alert.sensorId || 'Unknown Sensor'}`;
+    const body = alert.alertType || 'Threshold alert';
+
+    new Notification(title, {
+      body,
+      icon: '/vite.svg',
+    });
   }
-
-  const removeAlert = (alertId) => {
-    setAlerts(prev => prev.filter(alert => alert.alertId !== alertId))
+};
+
+
+// ======= Icon Helper (for other UI sections, unchanged) =======
+const getAlertIcon = (status) => {
+  switch (status?.toLowerCase()) {
+    case 'firing':
+      return <AlertTriangle className="text-danger me-2" />;
+    case 'resolved':
+      return <CheckCircle className="text-success me-2" />;
+    default:
+      return <Info className="text-primary me-2" />;
   }
+};
 
-  const activeAlertsCount = alerts.filter(a => a.status === 'firing' || a.status === 'alerting').length
 
-  // ==================================
-  // ⚙️ SENSOR MANAGEMENT
-  // ==================================
+// ======= Alert Removal and Count Helpers =======
+const removeAlert = (alertId) =>
+  setAlerts((prev) => prev.filter((a) => a.alertId !== alertId));
+
+const activeAlertsCount = alerts.filter(
+  (a) => a.status === 'firing' || a.status === 'alerting'
+).length;
+
+
+  // ========== Sensors ==========
   const loadSensors = async () => {
-    setLoadingSensors(true)
+    setLoadingSensors(true);
     try {
-      const res = await fetch(SENSOR_API)
-      const data = await res.json()
-      setSensors(data)
+      const res = await fetch(SENSOR_API);
+      setSensors(await res.json());
     } catch (err) {
-      console.error('Error loading sensors:', err)
+      console.error(err);
     } finally {
-      setLoadingSensors(false)
+      setLoadingSensors(false);
     }
-  }
+  };
 
-  useEffect(() => {
-    loadSensors()
-  }, [])
+  useEffect(() => { loadSensors(); }, []);
 
   const updateThreshold = async (sensorId, minValue, maxValue) => {
-    setSavingSensorId(sensorId)
+    setSavingSensorId(sensorId);
     try {
       const res = await fetch(`${SENSOR_API}/thresholds`, {
         method: "PUT",
         headers: { "Content-Type": "application/json" },
         body: JSON.stringify({ sensorId, minValue: parseFloat(minValue), maxValue: parseFloat(maxValue) })
-      })
-
-      if (!res.ok) throw new Error(await res.text())
-      await loadSensors()
-    } catch (err) {
-      console.error("Failed to update thresholds:", err)
+      });
+      if (!res.ok) throw new Error(await res.text());
+      await loadSensors();
+      toast.success(`✅ Threshold updated for ${sensorId}`);
+    } catch {
+      toast.error('❌ Failed to update threshold');
     } finally {
-      setSavingSensorId(null)
+      setSavingSensorId(null);
     }
-  }
+  };
 
-  // ==================================
-  // 📜 ALERT LOG & FILTER SECTION
-  // ==================================
+  // ========== Alert Log ==========
   const fetchAlertLog = async () => {
-    setLoadingLog(true)
+    setLoadingLog(true);
     try {
-      const params = new URLSearchParams()
-      if (filter.sensorId) params.append('sensorId', filter.sensorId)
-      if (filter.digitalModuleId) params.append('digitalModuleId', filter.digitalModuleId)
-      if (filter.status) params.append('status', filter.status)
-      if (filter.from) params.append('from', filter.from)
-      if (filter.to) params.append('to', filter.to)
-
-      const res = await fetch(`${ALERT_API}/filter?${params.toString()}`)
-      const data = await res.json()
-      setAlertLog(data)
+      const params = new URLSearchParams();
+      Object.keys(filter).forEach(k => filter[k] && params.append(k, filter[k]));
+      const res = await fetch(`${ALERT_API}/filter?${params.toString()}`);
+      setAlertLog(await res.json());
+      setCurrentPage(1);
     } catch (err) {
-      console.error('Error loading alert log:', err)
+      console.error(err);
     } finally {
-      setLoadingLog(false)
+      setLoadingLog(false);
     }
-  }
-
+  };
+
+  useEffect(() => { fetchAlertLog(); }, []);
+
+  const formatDate = (d) => {
+  if (!d) return 'N/A';
+  const normalized = d.replace(' ', 'T');
+  const date = new Date(normalized);
+  return isNaN(date.getTime())
+    ? d
+    : date.toLocaleString('en-GB', {
+        day: '2-digit',
+        month: 'short',
+        year: 'numeric',
+        hour: '2-digit',
+        minute: '2-digit',
+      });
+    
+};
+
+  // alert log pagination
+  const indexOfLast = currentPage * alertsPerPage;
+  const indexOfFirst = indexOfLast - alertsPerPage;
+  const currentAlerts = alertLog.slice(indexOfFirst, indexOfLast);
+  const totalPages = Math.max(1, Math.ceil(alertLog.length / alertsPerPage));
+
+  const getSensorIcon = (name) => {
+    if (!name) return <Cpu size={18} className="text-secondary me-2" />;
+    if (name.toLowerCase().includes('temp')) return <Thermometer size={18} className="text-danger me-2" />;
+    if (name.toLowerCase().includes('pressure')) return <Gauge size={18} className="text-primary me-2" />;
+    return <Cpu size={18} className="text-secondary me-2" />;
+  };
+
+  // dark mode switch
   useEffect(() => {
-    fetchAlertLog()
-  }, [])
-
-  // Helper to safely show dates
-  const formatDate = (dateString) => {
-    if (!dateString) return 'N/A'
-    const date = new Date(dateString)
-    return date.toString() === 'Invalid Date'
-      ? 'N/A'
-      : date.toLocaleString('en-GB', {
-          day: '2-digit',
-          month: 'short',
-          year: 'numeric',
-          hour: '2-digit',
-          minute: '2-digit'
-        })
-  }
+    document.body.classList.remove('bg-light', 'text-dark', 'bg-dark', 'text-light');
+    if (darkMode) document.body.classList.add('bg-dark', 'text-light');
+    else document.body.classList.add('bg-light', 'text-dark');
+  }, [darkMode]);
 
-  // ==================================
-  // 🖥️ UI
-  // ==================================
+  const handleOpenNotifications = () => setUnreadAlerts(0);
+  const MAX_DROPDOWN_ALERTS = 50;
+  const recentAlerts = alerts.slice(0, MAX_DROPDOWN_ALERTS);
+
+  // ========== UI ==========
   return (
-    <div className="min-h-screen bg-gray-50">
-      {/* Header */}
-      <header className="bg-white shadow-sm border-b">
-        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex justify-between items-center h-16">
-          <div className="flex items-center space-x-3">
-            <h1 className="text-xl font-semibold text-gray-900">Alert Dashboard</h1>
-            <div className={`flex items-center ${isConnected ? 'text-green-600' : 'text-red-600'}`}>
-              <div className={`w-2 h-2 rounded-full mr-2 ${isConnected ? 'bg-green-500' : 'bg-red-500'}`} />
-              <span className="text-sm">{isConnected ? 'Connected' : 'Disconnected'}</span>
-            </div>
-          </div>
-          <button
-            onClick={() => Notification.requestPermission()}
-            className="text-gray-500 hover:text-blue-600"
-          >
-            <Bell size={24} />
-          </button>
-        </div>
-      </header>
-
-      {/* Main */}
-      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 space-y-8">
-
-        {/* Alerts Summary */}
-        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
-          <div className="bg-white p-6 rounded-lg shadow">
-            <h2 className="text-lg font-semibold mb-4">Alert Summary</h2>
-            <p>Total: {alerts.length}</p>
-            <p className="text-red-600">Active: {activeAlertsCount}</p>
-            <p className="text-green-600">Resolved: {alerts.length - activeAlertsCount}</p>
-          </div>
+    <div className={`min-vh-100 ${darkMode ? 'bg-dark text-light' : 'bg-light text-dark'}`}>
+      {/* Navbar */}
+      <nav className={`navbar navbar-expand-lg ${darkMode ? 'navbar-dark bg-dark' : 'navbar-light bg-white'} shadow-sm sticky-top`}>
+        <div className="container-fluid d-flex justify-content-between align-items-center">
+          <span className="navbar-brand fw-bold text-primary">⚙️ Smart Alert Dashboard</span>
 
-          <div className="lg:col-span-2 bg-white rounded-lg shadow">
-            <div className="p-6 border-b flex items-center justify-between">
-              <h2 className="text-lg font-semibold flex items-center space-x-2">
-                <Bell className="w-5 h-5 text-gray-600" />
-                <span>Recent Alerts</span>
-              </h2>
-            </div>
-            <div className="divide-y">
-              {alerts.length === 0 ? (
-                <div className="p-8 text-center text-gray-500">No alerts yet</div>
-              ) : (
-                alerts.map(alert => (
-                  <div key={alert.alertId} className="p-6 flex justify-between">
-                    <div className="flex items-start space-x-3">
-                      {getAlertIcon(alert.status)}
-                      <div>
-                        <h3 className="font-medium">{alert.type}</h3>
-                        <p className="text-gray-600">{alert.description}</p>
+          <div className="d-flex align-items-center gap-2">
+            <button
+              onClick={() => setDarkMode(prev => !prev)}
+              className={`btn btn-sm ${darkMode ? 'btn-outline-light' : 'btn-outline-secondary'}`}
+            >
+              {darkMode ? <Sun size={16} /> : <Moon size={16} />}
+            </button>
+
+            {/* Notification Dropdown */}
+            <div className="dropdown">
+              <button
+                className="btn position-relative"
+                data-bs-toggle="dropdown"
+                aria-expanded="false"
+                onClick={handleOpenNotifications}
+              >
+                <Bell size={22} className={unreadAlerts > 0 ? 'text-warning animate-bell' : darkMode ? 'text-light' : 'text-secondary'} />
+                {unreadAlerts > 0 && (
+                  <span className="position-absolute translate-middle badge rounded-pill bg-danger" style={{ top: '-6px', right: '-8px' }}>
+                    {unreadAlerts > 99 ? '99+' : unreadAlerts}
+                  </span>
+                )}
+              </button>
+              <ul className={`dropdown-menu dropdown-menu-end shadow ${darkMode ? 'dropdown-menu-dark' : ''}`} style={{ minWidth: 320, maxHeight: 400, overflowY: 'auto' }}>
+                <li className="dropdown-header">Notifications</li>
+                {recentAlerts.length === 0 ? (
+                  <li><span className="dropdown-item text-muted text-center">No alerts</span></li>
+                ) : recentAlerts.map((a, i) => (
+                  <li key={a.alertId || i}>
+                    <div className="dropdown-item d-flex justify-content-between align-items-start">
+                      <div className="d-flex align-items-center">
+                        {getAlertIcon(a.status)}
+                        <div>
+                          <strong>{a.type || 'Unknown'}</strong>
+                          <div className="small text-muted">{a.description}</div>
+                        </div>
                       </div>
+                      <button className="btn btn-sm btn-link p-0" onClick={(e) => { e.stopPropagation(); removeAlert(a.alertId); }}>
+                        <X size={14} />
+                      </button>
                     </div>
-                    <button onClick={() => removeAlert(alert.alertId)} className="text-gray-400 hover:text-gray-600">
-                      <X className="w-4 h-4" />
-                    </button>
-                  </div>
-                ))
-              )}
+                  </li>
+                ))}
+                {alerts.length > MAX_DROPDOWN_ALERTS && (
+                  <>
+                    <li><hr className="dropdown-divider" /></li>
+                    <li><button className="dropdown-item text-center" onClick={() => setViewAllModal(true)}>View All</button></li>
+                  </>
+                )}
+              </ul>
+            </div>
+
+            {/* Admin dropdown */}
+            <div className="dropdown d-flex align-items-center position-relative">
+              <button
+                className={`btn btn-sm ${darkMode ? 'btn-outline-light' : 'btn-outline-primary'} dropdown-toggle d-flex align-items-center`}
+                data-bs-toggle="dropdown"
+              >
+                <User size={16} className="me-1" /> Admin
+              </button>
+              <span className={`status-dot ms-2 ${isConnected ? 'bg-success' : 'bg-danger'}`}></span>
+              <ul className={`dropdown-menu dropdown-menu-end shadow ${darkMode ? 'dropdown-menu-dark' : ''}`}>
+                <li><button className="dropdown-item">Profile</button></li>
+                <li><button className="dropdown-item">Settings</button></li>
+                <li><button className="dropdown-item">Help</button></li>
+                <li><hr className="dropdown-divider" /></li>
+                <li><button className="dropdown-item text-danger">Logout</button></li>
+              </ul>
             </div>
           </div>
         </div>
+      </nav>
+
+      {/* Body */}
+      <div className="container py-4">
+
+      {/* Grafana Iframe */}
+<div className={`card border-0 shadow-sm rounded-4 mb-4 ${darkMode ? 'bg-dark text-light' : 'bg-light text-dark'}`}>
+  <div className="card-header fw-semibold fs-5 py-3 border-0">
+    <i className="bi bi-bar-chart me-2"></i> Charts Live Panel
+  </div>
+
+  <div className="card-body">
+    <div className="container-fluid">
+      <div className="row g-3">
+        {/* First chart */}
+        <div className="col-12 col-md-6">
+          <div className="ratio ratio-16x9 rounded overflow-hidden shadow-sm">
+            <iframe
+              src="http://localhost:3000/d-solo/ad7kfwh/new-dashboard?orgId=1&from=1602092864391&to=1759859264391&timezone=browser&theme=light&panelId=1"
+              title="Grafana Chart 1"
+              className="border-0"
+              allowFullScreen
+            ></iframe>
+          </div>
+        </div>
 
-        {/* Grafana */}
-        <iframe
-          src="http://localhost:3000/d-solo/ad7kfwh/new-dashboard?orgId=1&panelId=panel-1"
-          width="100%"
-          height="200"
-          frameBorder="0"
-          className="rounded-lg shadow"
-        ></iframe>
-
-        {/* Sensor Management */}
-        <div className="bg-white rounded-lg shadow p-6">
-          <div className="flex items-center justify-between mb-4">
-            <h2 className="text-lg font-semibold flex items-center space-x-2">
-              <Settings className="w-5 h-5 text-gray-600" />
-              <span>Sensor Threshold Management</span>
-            </h2>
-            <button onClick={loadSensors} className="text-sm text-blue-600 hover:underline">↻ Refresh</button>
+        {/* Second chart */}
+        <div className="col-12 col-md-6">
+          <div className="ratio ratio-16x9 rounded overflow-hidden shadow-sm">
+            <iframe
+              src="http://localhost:3000/d-solo/ad7kfwh/new-dashboard?orgId=1&from=1696699117026&to=1759857517026&timezone=browser&theme=light&panelId=5"
+              title="Grafana Chart 2"
+              className="border-0"
+              allowFullScreen
+            ></iframe>
           </div>
-          {loadingSensors ? (
-            <p>Loading sensors...</p>
-          ) : (
-            <div className="overflow-x-auto">
-              <table className="min-w-full text-sm border">
-                <thead className="bg-gray-100">
-                  <tr>
-                    <th className="px-3 py-2 text-left">ID</th>
-                    <th className="px-3 py-2 text-left">Name</th>
-                    <th className="px-3 py-2 text-left">Unit</th>
-                    <th className="px-3 py-2 text-left">Min</th>
-                    <th className="px-3 py-2 text-left">Max</th>
-                    <th className="px-3 py-2 text-center">Action</th>
-                  </tr>
-                </thead>
-                <tbody>
-                  {sensors.map(sensor => (
-                    <tr key={sensor.sensorId} className="border-t">
-                      <td className="px-3 py-2">{sensor.sensorId}</td>
-                      <td className="px-3 py-2">{sensor.name}</td>
-                      <td className="px-3 py-2">{sensor.unit || '-'}</td>
-                      <td className="px-3 py-2">
+        </div>
+      </div>
+
+      {/* Optional: add more charts in new rows */}
+      {/* <div className="row g-3 mt-2">
+        <div className="col-12 col-md-6">...</div>
+        <div className="col-12 col-md-6">...</div>
+      </div> */}
+    </div>
+  </div>
+</div>
+
+
+        {/* ✅ Sensor Threshold Section */}
+<div className={`card border-0 shadow-lg rounded-4 mb-4 ${darkMode ? 'bg-dark text-light' : 'bg-light text-dark'}`}>
+  <div className="card-header d-flex justify-content-between align-items-center py-3 border-0">
+    <div className="d-flex align-items-center gap-2 fs-5 fw-semibold">
+      <Settings size={20} className="text-primary" />
+      <span>Sensor Threshold Management</span>
+    </div>
+    <button onClick={loadSensors} className="btn btn-sm btn-outline-primary d-flex align-items-center gap-1">
+      <i className="bi bi-arrow-clockwise"></i> Refresh
+    </button>
+  </div>
+
+  <div className="card-body p-0">
+    {loadingSensors ? (
+      <div className="p-4 text-center">
+        <div className="spinner-border text-primary" role="status"></div>
+        <p className="mt-2 text-muted">Loading sensors...</p>
+      </div>
+    ) : (
+      <>
+        <div className="table-responsive">
+          <table className={`table align-middle mb-0 table-borderless ${darkMode ? 'table-dark' : ''}`}>
+            <thead className={`sticky-top ${darkMode ? 'bg-secondary' : 'bg-white shadow-sm'}`}>
+              <tr className="text-uppercase small text-muted fw-semibold">
+                <th>Sensor</th>
+                <th>Unit</th>
+                <th>Min</th>
+                <th>Max</th>
+                <th className="text-center">Action</th>
+              </tr>
+            </thead>
+            <tbody>
+              {currentSensors.length === 0 ? (
+                <tr>
+                  <td colSpan="5" className="text-center text-muted py-4">
+                    No sensors available.
+                  </td>
+                </tr>
+              ) : (
+                currentSensors.map((s) => (
+                  <tr key={s.sensorId} className={darkMode ? 'hover-glow-dark' : 'hover-glow-light'}>
+                    <td className="fw-semibold">
+                      <div className="d-flex align-items-center gap-2">
+                        {getSensorIcon(s.name)}
+                        <span>{s.name}</span>
+                      </div>
+                    </td>
+                    <td>{s.unit || '-'}</td>
+                    <td>
+                      <div className="input-group input-group-sm">
+                        <span className="input-group-text border-0 bg-transparent text-muted">⬇</span>
                         <input
                           type="number"
-                          defaultValue={sensor.minValue ?? ''}
-                          className="border rounded px-2 py-1 w-24"
-                          onChange={(e) => (sensor.minValue = e.target.value)}
+                          defaultValue={s.minValue ?? ''}
+                          className="form-control rounded-pill text-center"
+                          onChange={(e) => (s.minValue = e.target.value)}
+                          style={{ width: '90px' }}
                         />
-                      </td>
-                      <td className="px-3 py-2">
+                      </div>
+                    </td>
+                    <td>
+                      <div className="input-group input-group-sm">
+                        <span className="input-group-text border-0 bg-transparent text-muted">⬆</span>
                         <input
                           type="number"
-                          defaultValue={sensor.maxValue ?? ''}
-                          className="border rounded px-2 py-1 w-24"
-                          onChange={(e) => (sensor.maxValue = e.target.value)}
+                          defaultValue={s.maxValue ?? ''}
+                          className="form-control rounded-pill text-center"
+                          onChange={(e) => (s.maxValue = e.target.value)}
+                          style={{ width: '90px' }}
                         />
-                      </td>
-                      <td className="px-3 py-2 text-center">
-                        <button
-                          onClick={() => updateThreshold(sensor.sensorId, sensor.minValue, sensor.maxValue)}
-                          disabled={savingSensorId === sensor.sensorId}
-                          className="bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700 text-sm"
-                        >
-                          {savingSensorId === sensor.sensorId ? 'Saving...' : 'Save'}
-                        </button>
-                      </td>
-                    </tr>
-                  ))}
-                </tbody>
-              </table>
-            </div>
-          )}
+                      </div>
+                    </td>
+                    <td className="text-center">
+                      <button
+                        className={`btn btn-sm rounded-pill px-3 ${
+                          savingSensorId === s.sensorId ? 'btn-secondary' : 'btn-primary'
+                        }`}
+                        onClick={() => updateThreshold(s.sensorId, s.minValue, s.maxValue)}
+                        disabled={savingSensorId === s.sensorId}
+                      >
+                        {savingSensorId === s.sensorId ? (
+                          <span>
+                            <i className="spinner-border spinner-border-sm me-1"></i> Saving...
+                          </span>
+                        ) : (
+                          <span>
+                            <i className="bi bi-check-circle me-1"></i> Save
+                          </span>
+                        )}
+                      </button>
+                    </td>
+                  </tr>
+                ))
+              )}
+            </tbody>
+          </table>
         </div>
 
-        {/* 📜 ALERT LOG */}
-        <div className="bg-white rounded-lg shadow p-6">
-          <div className="flex justify-between items-center mb-4">
-            <h2 className="text-lg font-semibold flex items-center space-x-2">
-              <Search className="w-5 h-5 text-gray-600" />
-              <span>Alert Log</span>
-            </h2>
-            <button onClick={fetchAlertLog} className="text-sm text-blue-600 hover:underline">↻ Refresh</button>
-          </div>
-
-          {/* Filter Form */}
-          <div className="grid grid-cols-1 md:grid-cols-5 gap-4 mb-4">
-            {/* Sensor Filter */}
-            <div>
-              <label className="block text-sm text-gray-600 mb-1">Sensor</label>
-              <select
-                className="border rounded w-full px-3 py-1"
-                value={filter.sensorId}
-                onChange={(e) => setFilter({ ...filter, sensorId: e.target.value })}
-              >
-                <option value="">All Sensors</option>
-                {sensors.map(sensor => (
-                  <option key={sensor.sensorId} value={sensor.sensorId}>
-                    {sensor.name}
-                  </option>
-                ))}
-              </select>
-            </div>
-
-            {/* Module Filter */}
-            <div>
-              <label className="block text-sm text-gray-600 mb-1">Module</label>
-              <select
-                className="border rounded w-full px-3 py-1"
-                value={filter.digitalModuleId}
-                onChange={(e) => setFilter({ ...filter, digitalModuleId: e.target.value })}
-              >
-                <option value="">All Modules</option>
-                <option value="AIQS001">AIQS001</option>
-                <option value="DPS001">DPS001</option>
-                <option value="DRILL001">DRILL001</option>
-                <option value="FTS001">FTS001</option>
-                <option value="HBW001">HBW001</option>
-                <option value="MILL001">MILL001</option>
-              </select>
-            </div>
-
-            {/* Status */}
-            <div>
-              <label className="block text-sm text-gray-600 mb-1">Status</label>
-              <select
-                className="border rounded w-full px-3 py-1"
-                value={filter.status}
-                onChange={(e) => setFilter({ ...filter, status: e.target.value })}
-              >
-                <option value="">All</option>
-                <option value="firing">Firing</option>
-                <option value="resolved">Resolved</option>
-              </select>
-            </div>
-
-            {/* From */}
-            <div>
-              <label className="block text-sm text-gray-600 mb-1">From</label>
-              <input
-                type="datetime-local"
-                className="border rounded w-full px-3 py-1"
-                value={filter.from}
-                onChange={(e) => setFilter({ ...filter, from: e.target.value })}
-              />
-            </div>
-
-            {/* To */}
-            <div>
-              <label className="block text-sm text-gray-600 mb-1">To</label>
-              <input
-                type="datetime-local"
-                className="border rounded w-full px-3 py-1"
-                value={filter.to}
-                onChange={(e) => setFilter({ ...filter, to: e.target.value })}
-              />
-            </div>
-          </div>
-
-          {/* Search */}
-          <div className="flex justify-end mb-4">
+        {/* Pagination Arrows */}
+        {totalSensorPages > 1 && (
+          <div className="d-flex justify-content-center align-items-center gap-3 py-3">
+            <button
+              className="btn btn-outline-primary btn-sm rounded-circle"
+              disabled={sensorPage === 1}
+              onClick={() => setSensorPage((p) => Math.max(p - 1, 1))}
+            >
+              ←
+            </button>
+            <span className="fw-semibold small">
+              Page {sensorPage} / {totalSensorPages}
+            </span>
             <button
-              onClick={fetchAlertLog}
-              className="bg-blue-600 text-white px-5 py-1.5 rounded hover:bg-blue-700 flex items-center space-x-1"
+              className="btn btn-outline-primary btn-sm rounded-circle"
+              disabled={sensorPage === totalSensorPages}
+              onClick={() => setSensorPage((p) => Math.min(p + 1, totalSensorPages))}
             >
-              <Search className="w-4 h-4" /> <span>Search</span>
+              →
             </button>
           </div>
+        )}
+      </>
+    )}
+  </div>
+</div>
+
+{/* === 🚨 Alert Log Section (Refined Modern Design) === */}
+<div className={`card border-0 shadow-lg rounded-4 mb-5 ${darkMode ? 'bg-dark text-light' : 'bg-white text-dark'}`}>
+  <div className={`card-header border-0 py-3 d-flex justify-content-between align-items-center ${darkMode ? 'bg-dark text-light' : 'bg-white shadow-sm'}`}>
+    <div className="d-flex align-items-center gap-2 fs-5 fw-semibold">
+      <Search className="text-primary" size={20} />
+      <span>Alert Log</span>
+    </div>
+    <button
+      onClick={fetchAlertLog}
+      className={`btn btn-sm rounded-pill px-3 ${darkMode ? 'btn-outline-light' : 'btn-outline-primary'}`}
+    >
+      <i className="bi bi-arrow-clockwise me-1"></i> Refresh
+    </button>
+  </div>
+
+  {/* Filter Toolbar */}
+  <div className="px-3 py-3 border-bottom bg-opacity-10"
+       style={{ background: darkMode ? 'rgba(255,255,255,0.03)' : '#f8fafc' }}>
+    <div className="row g-3 align-items-center">
+
+      {/* Sensor */}
+      <div className="col-md-auto col-6">
+        <div className="input-group input-group-sm rounded-pill shadow-sm">
+          <span className="input-group-text bg-gradient text-white border-0" style={{ background: '#d40000ff' }}>
+            <Cpu size={14} />
+          </span>
+          <select
+            className={`form-select border-0 ${darkMode ? 'bg-dark text-light' : 'bg-white'}`}
+            value={filter.sensorId}
+            onChange={(e) => setFilter({ ...filter, sensorId: e.target.value })}
+          >
+            <option value="">All Sensors</option>
+            {sensors.map((s) => (
+              <option key={s.sensorId} value={s.sensorId}>{s.name}</option>
+            ))}
+          </select>
+        </div>
+      </div>
+
+      {/* Module */}
+      <div className="col-md-auto col-6">
+        <div className="input-group input-group-sm rounded-pill shadow-sm">
+          <span className="input-group-text border-0 text-white" style={{ background: '#d40000ff' }}>
+            <Gauge size={14} />
+          </span>
+          <select
+            className={`form-select border-0 ${darkMode ? 'bg-dark text-light' : 'bg-white'}`}
+            value={filter.digitalModuleId}
+            onChange={(e) => setFilter({ ...filter, digitalModuleId: e.target.value })}
+          >
+            <option value="">All Modules</option>
+            {['AIQS001', 'DPS001', 'DRILL001', 'FTS001', 'HBW001', 'MILL001'].map((id) => (
+              <option key={id} value={id}>{id}</option>
+            ))}
+          </select>
+        </div>
+      </div>
+
+      {/* Status */}
+      <div className="col-md-auto col-6">
+        <div className="input-group input-group-sm rounded-pill shadow-sm">
+          <span className="input-group-text border-0 text-white" style={{ background: '#d40000ff' }}>
+            <AlertTriangle size={14} />
+          </span>
+          <select
+            className={`form-select border-0 ${darkMode ? 'bg-dark text-light' : 'bg-white'}`}
+            value={filter.status}
+            onChange={(e) => setFilter({ ...filter, status: e.target.value })}
+          >
+            <option value="">All Status</option>
+            <option value="firing">Firing</option>
+            <option value="resolved">Resolved</option>
+          </select>
+        </div>
+      </div>
+
+      {/* Date From */}
+      <div className="col-md-auto col-6">
+        <div className="input-group input-group-sm rounded-pill shadow-sm">
+          <span className="input-group-text border-0 text-white" style={{ background: '#d40000ff' }}>
+            <Clock size={14} />
+          </span>
+          <input
+            type="datetime-local"
+            className={`form-control border-0 ${darkMode ? 'bg-dark text-light' : 'bg-white'}`}
+            value={filter.from}
+            onChange={(e) => setFilter({ ...filter, from: e.target.value })}
+          />
+        </div>
+      </div>
+
+      {/* Date To */}
+      <div className="col-md-auto col-6">
+        <div className="input-group input-group-sm rounded-pill shadow-sm">
+          <span className="input-group-text border-0 text-white" style={{ background: '#d40000ff' }}>
+            <Clock size={14} />
+          </span>
+          <input
+            type="datetime-local"
+            className={`form-control border-0 ${darkMode ? 'bg-dark text-light' : 'bg-white'}`}
+            value={filter.to}
+            onChange={(e) => setFilter({ ...filter, to: e.target.value })}
+          />
+        </div>
+      </div>
+
+      {/* Search Button */}
+      <div className="col-auto ms-auto">
+        <button
+          onClick={fetchAlertLog}
+          className={`btn btn-sm rounded-pill shadow-sm px-3 d-flex align-items-center gap-2 ${darkMode ? 'btn-light text-dark' : 'btn-primary text-white'}`}
+        >
+          <Search size={16} /> Search
+        </button>
+      </div>
+    </div>
+  </div>
+
+ {/* Table */}
+<div className="card-body p-0">
+  {loadingLog ? (
+    <div className="text-center py-5">
+      <div className="spinner-border text-primary" role="status"></div>
+      <p className="mt-3 text-muted">Loading alert log...</p>
+    </div>
+  ) : (
+    <>
+      <div className="table-responsive">
+        <table
+          className={`table table-hover align-middle mb-0 ${
+            darkMode ? 'table-dark' : ''
+          }`}
+          style={{ borderCollapse: 'separate', borderSpacing: '0 8px' }}
+        >
+          <thead
+            className={`text-uppercase small fw-semibold ${
+              darkMode ? 'bg-secondary text-light' : 'bg-light text-dark'
+            }`}
+            style={{
+              borderRadius: '12px',
+              letterSpacing: '0.5px',
+            }}
+          >
+            <tr>
+              <th className="px-4">Alert</th>
+              <th>Sensor</th>
+              <th>Module</th>
+              <th className="text-center">Status</th>
+              <th className="text-end pe-4">Created</th>
+            </tr>
+          </thead>
+          <tbody>
+            {currentAlerts.length === 0 ? (
+              <tr>
+                <td colSpan="5" className="text-center text-muted py-4">
+                  No alerts found
+                </td>
+              </tr>
+            ) : (
+              currentAlerts.map((a) => (
+                <tr
+                  key={a.alertId}
+                  className={`rounded-3 ${
+                    darkMode ? 'hover-glow-dark' : 'hover-glow-light'
+                  }`}
+                  style={{
+                    background: darkMode
+                      ? 'rgba(255,255,255,0.05)'
+                      : 'rgba(0,0,0,0.02)',
+                    transition: 'all 0.2s ease',
+                    borderRadius: '12px',
+                  }}
+                >
+                  {/* ALERT TYPE */}
+                  <td className="fw-semibold px-4">
+                    <div className="d-flex flex-column">
+                      <span className="fw-bold text-primary">
+                        {a.alertType || 'Threshold Alert'}
+                      </span>
+                      <small className="text-muted">{a.description}</small>
+                    </div>
+                  </td>
+
+                  {/* SENSOR */}
+                  <td>{a.sensorId}</td>
+
+                  {/* MODULE */}
+                  <td>{a.digitalModuleId}</td>
+
+                  {/* STATUS */}
+                  <td className="text-center">
+                    <div
+                      className={`badge rounded-pill fw-semibold d-inline-block py-2 px-3 shadow-sm ${
+                        a.status === 'firing'
+                          ? 'bg-danger text-white'
+                          : a.status === 'resolved'
+                          ? 'bg-success text-white'
+                          : 'bg-warning text-dark'
+                      }`}
+                      style={{
+                        minWidth: '90px',
+                        textTransform: 'capitalize',
+                        fontSize: '0.85rem',
+                      }}
+                    >
+                      {a.status}
+                    </div>
+                  </td>
+
+                  {/* CREATED */}
+                  <td className="text-end pe-4 text-muted">
+                    {formatDate(a.startedAt)}
+                  </td>
+                </tr>
+              ))
+            )}
+          </tbody>
+        </table>
+      </div>
+
+      {/* Pagination */}
+      {totalPages > 1 && (
+        <div className="d-flex justify-content-center align-items-center gap-3 py-4">
+          <button
+            className={`btn btn-outline-primary btn-sm rounded-circle ${
+              darkMode ? 'text-light border-light' : ''
+            }`}
+            onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}
+            disabled={currentPage === 1}
+          >
+            ←
+          </button>
+          <span className="fw-semibold small">
+            Page {currentPage} / {totalPages}
+          </span>
+          <button
+            className={`btn btn-outline-primary btn-sm rounded-circle ${
+              darkMode ? 'text-light border-light' : ''
+            }`}
+            onClick={() => setCurrentPage((p) => Math.min(p + 1, totalPages))}
+            disabled={currentPage === totalPages}
+          >
+            →
+          </button>
+        </div>
+      )}
+    </>
+  )}
+</div>
 
-          {/* Log Table */}
-          {loadingLog ? (
-            <p>Loading alert log...</p>
-          ) : (
-            <div className="overflow-x-auto">
-              <table className="min-w-full text-sm border">
-                <thead className="bg-gray-100">
-                  <tr>
-                    <th className="px-3 py-2">Alert Name</th>
-                    <th className="px-3 py-2">Sensor ID</th>
-                    <th className="px-3 py-2">Module</th>
-                    <th className="px-3 py-2">Status</th>
-                    <th className="px-3 py-2">Severity</th>
-                    <th className="px-3 py-2">Created</th>
-                  </tr>
-                </thead>
-                <tbody>
-                  {alertLog.length === 0 ? (
-                    <tr><td colSpan="6" className="text-center py-3 text-gray-500">No alerts found</td></tr>
-                  ) : (
-                    alertLog.map(alert => (
-                      <tr key={alert.id} className="border-t">
-                        <td className="px-3 py-2">{alert.alertName}</td>
-                        <td className="px-3 py-2">{alert.sensorId}</td>
-                        <td className="px-3 py-2">{alert.digitalModuleId}</td>
-                        <td className="px-3 py-2">
-                          <span className={`px-2 py-1 rounded-full text-xs ${alert.status === 'firing' ? 'bg-red-100 text-red-800' : 'bg-green-100 text-green-800'}`}>
-                            {alert.status}
-                          </span>
-                        </td>
-                        <td className="px-3 py-2">{alert.severity}</td>
-                        <td className="px-3 py-2">{formatDate(alert.createdAt)}</td>
-                      </tr>
-                    ))
-                  )}
-                </tbody>
-              </table>
+</div>
+
+        </div>
+      {/* Modal for View All Alerts */}
+      {viewAllModal && (
+        <div className="modal show d-block" tabIndex="-1" onClick={() => setViewAllModal(false)}>
+          <div className="modal-dialog modal-lg modal-dialog-scrollable" onClick={e => e.stopPropagation()}>
+            <div className={`modal-content ${darkMode ? 'bg-secondary text-light' : ''}`}>
+              <div className="modal-header">
+                <h5 className="modal-title">All Alerts</h5>
+                <button type="button" className="btn-close" onClick={() => setViewAllModal(false)}></button>
+              </div>
+              <div className="modal-body">
+                {alerts.length === 0 ? <p>No alerts yet</p> : (
+                  <ul className="list-group">
+                    {alerts.map((a, i) => (
+                      <li key={a.alertId || i} className="list-group-item d-flex justify-content-between align-items-start">
+                        <div className="d-flex align-items-center">
+                          {getAlertIcon(a.status)}
+                          <div>
+                            <strong>{a.type || 'Unknown'}</strong>
+                            <div className="small text-muted">{a.description}</div>
+                          </div>
+                        </div>
+                        <button className="btn btn-sm btn-link p-0" onClick={() => removeAlert(a.alertId)}><X size={14} /></button>
+                      </li>
+                    ))}
+                  </ul>
+                )}
+              </div>
+              <div className="modal-footer">
+                <button className="btn btn-secondary" onClick={() => setViewAllModal(false)}>Close</button>
+              </div>
             </div>
-          )}
+          </div>
         </div>
-      </main>
+      )}
+
+      <ToastContainer position="top-right" autoClose={5000} theme={darkMode ? "dark" : "light"} />
     </div>
-  )
+  );
 }
 
-export default App
+export default App;
diff --git a/src/index.css b/src/index.css
index 08a3ac9..43fe860 100644
--- a/src/index.css
+++ b/src/index.css
@@ -66,3 +66,25 @@ button:focus-visible {
     background-color: #f9f9f9;
   }
 }
+/* Smooth hover highlight */
+.hover-glow-light:hover {
+  background-color: rgba(0, 123, 255, 0.05);
+  transition: background 0.3s ease;
+}
+.hover-glow-dark:hover {
+  background-color: rgba(255, 255, 255, 0.05);
+  transition: background 0.3s ease;
+}
+
+/* Table header stickiness */
+.table thead th {
+  position: sticky;
+  top: 0;
+  z-index: 2;
+}
+
+/* Spinner alignment fix */
+.spinner-border {
+  width: 1.5rem;
+  height: 1.5rem;
+}
diff --git a/src/main.jsx b/src/main.jsx
index 24545d5..0ae5399 100644
--- a/src/main.jsx
+++ b/src/main.jsx
@@ -1,6 +1,9 @@
 import React from 'react';
 import ReactDOM from 'react-dom/client';
 import App from './App';
+import 'bootstrap/dist/js/bootstrap.bundle.min.js';
+import 'bootstrap/dist/css/bootstrap.min.css';
+
 import 'react-toastify/dist/ReactToastify.css';
 import { ToastContainer } from 'react-toastify';
 
